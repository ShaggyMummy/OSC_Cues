//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _RootShaderParameters
// {
//
//   uint ScreenProbeTracingOctahedronResolution;// Offset:   32 Size:     4 [unused]
//   uint ScreenProbeGatherOctahedronResolution;// Offset:   36 Size:     4
//   uint ScreenProbeGatherOctahedronResolutionWithBorder;// Offset:   40 Size:     4 [unused]
//   uint ScreenProbeDownsampleFactor;  // Offset:   44 Size:     4
//   uint2 ScreenProbeViewSize;         // Offset:   48 Size:     8
//   uint2 ScreenProbeAtlasViewSize;    // Offset:   56 Size:     8
//   uint2 ScreenProbeAtlasBufferSize;  // Offset:   64 Size:     8 [unused]
//   float ScreenProbeGatherMaxMip;     // Offset:   72 Size:     4
//   float RelativeSpeedDifferenceToConsiderLightingMoving;// Offset:   76 Size:     4 [unused]
//   float ScreenTraceNoFallbackThicknessScale;// Offset:   80 Size:     4 [unused]
//   float2 SampleRadianceProbeUVMul;   // Offset:   88 Size:     8
//   float2 SampleRadianceProbeUVAdd;   // Offset:   96 Size:     8
//   float2 SampleRadianceAtlasUVMul;   // Offset:  104 Size:     8
//   uint NumUniformScreenProbes;       // Offset:  116 Size:     4
//   uint MaxNumAdaptiveProbes;         // Offset:  120 Size:     4 [unused]
//   int FixedJitterIndex;              // Offset:  124 Size:     4
//   uint MaxImportanceSamplingOctahedronResolution;// Offset:  224 Size:     4 [unused]
//   uint ScreenProbeBRDFOctahedronResolution;// Offset:  228 Size:     4 [unused]
//   float OctahedralSolidAngleTextureResolutionSq;// Offset:  240 Size:     4 [unused]
//   uint UseScreenBentNormal;          // Offset:  376 Size:     4
//   float FullResolutionJitterWidth;   // Offset:  384 Size:     4
//   float MaxRoughnessToTrace;         // Offset:  388 Size:     4
//   float RoughnessFadeLength;         // Offset:  392 Size:     4
//   uint DefaultDiffuseIntegrationMethod;// Offset:  396 Size:     4
//   uint2 ViewportTileDimensions;      // Offset:  400 Size:     8
//
// }
//
// cbuffer View
// {
//
//   row_major float4x4 View_TranslatedWorldToClip;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 View_RelativeWorldToClip;// Offset:   64 Size:    64 [unused]
//   row_major float4x4 View_ClipToRelativeWorld;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 View_TranslatedWorldToView;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 View_ViewToTranslatedWorld;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 View_TranslatedWorldToCameraView;// Offset:  320 Size:    64 [unused]
//   row_major float4x4 View_CameraViewToTranslatedWorld;// Offset:  384 Size:    64 [unused]
//   row_major float4x4 View_ViewToClip;// Offset:  448 Size:    64 [unused]
//   row_major float4x4 View_ViewToClipNoAA;// Offset:  512 Size:    64 [unused]
//   row_major float4x4 View_ClipToView;// Offset:  576 Size:    64 [unused]
//   row_major float4x4 View_ClipToTranslatedWorld;// Offset:  640 Size:    64 [unused]
//   row_major float4x4 View_SVPositionToTranslatedWorld;// Offset:  704 Size:    64 [unused]
//   row_major float4x4 View_ScreenToRelativeWorld;// Offset:  768 Size:    64
//   row_major float4x4 View_ScreenToTranslatedWorld;// Offset:  832 Size:    64 [unused]
//   row_major float4x4 View_MobileMultiviewShadowTransform;// Offset:  896 Size:    64 [unused]
//   float3 View_ViewTilePosition;      // Offset:  960 Size:    12
//   float PrePadding_View_972;         // Offset:  972 Size:     4 [unused]
//   float3 View_MatrixTilePosition;    // Offset:  976 Size:    12
//   float PrePadding_View_988;         // Offset:  988 Size:     4 [unused]
//   float3 View_ViewForward;           // Offset:  992 Size:    12 [unused]
//   float PrePadding_View_1004;        // Offset: 1004 Size:     4 [unused]
//   float3 View_ViewUp;                // Offset: 1008 Size:    12 [unused]
//   float PrePadding_View_1020;        // Offset: 1020 Size:     4 [unused]
//   float3 View_ViewRight;             // Offset: 1024 Size:    12 [unused]
//   float PrePadding_View_1036;        // Offset: 1036 Size:     4 [unused]
//   float3 View_HMDViewNoRollUp;       // Offset: 1040 Size:    12 [unused]
//   float PrePadding_View_1052;        // Offset: 1052 Size:     4 [unused]
//   float3 View_HMDViewNoRollRight;    // Offset: 1056 Size:    12 [unused]
//   float PrePadding_View_1068;        // Offset: 1068 Size:     4 [unused]
//   float4 View_InvDeviceZToWorldZTransform;// Offset: 1072 Size:    16
//   float4 View_ScreenPositionScaleBias;// Offset: 1088 Size:    16
//   float3 View_RelativeWorldCameraOrigin;// Offset: 1104 Size:    12
//   float PrePadding_View_1116;        // Offset: 1116 Size:     4 [unused]
//   float3 View_TranslatedWorldCameraOrigin;// Offset: 1120 Size:    12 [unused]
//   float PrePadding_View_1132;        // Offset: 1132 Size:     4 [unused]
//   float3 View_RelativeWorldViewOrigin;// Offset: 1136 Size:    12 [unused]
//   float PrePadding_View_1148;        // Offset: 1148 Size:     4 [unused]
//   float3 View_RelativePreViewTranslation;// Offset: 1152 Size:    12 [unused]
//   float PrePadding_View_1164;        // Offset: 1164 Size:     4 [unused]
//   row_major float4x4 View_PrevViewToClip;// Offset: 1168 Size:    64 [unused]
//   row_major float4x4 View_PrevClipToView;// Offset: 1232 Size:    64 [unused]
//   row_major float4x4 View_PrevTranslatedWorldToClip;// Offset: 1296 Size:    64 [unused]
//   row_major float4x4 View_PrevTranslatedWorldToView;// Offset: 1360 Size:    64 [unused]
//   row_major float4x4 View_PrevViewToTranslatedWorld;// Offset: 1424 Size:    64 [unused]
//   row_major float4x4 View_PrevTranslatedWorldToCameraView;// Offset: 1488 Size:    64 [unused]
//   row_major float4x4 View_PrevCameraViewToTranslatedWorld;// Offset: 1552 Size:    64 [unused]
//   float3 View_PrevTranslatedWorldCameraOrigin;// Offset: 1616 Size:    12 [unused]
//   float PrePadding_View_1628;        // Offset: 1628 Size:     4 [unused]
//   float3 View_PrevRelativeWorldCameraOrigin;// Offset: 1632 Size:    12 [unused]
//   float PrePadding_View_1644;        // Offset: 1644 Size:     4 [unused]
//   float3 View_PrevRelativeWorldViewOrigin;// Offset: 1648 Size:    12 [unused]
//   float PrePadding_View_1660;        // Offset: 1660 Size:     4 [unused]
//   float3 View_RelativePrevPreViewTranslation;// Offset: 1664 Size:    12 [unused]
//   float PrePadding_View_1676;        // Offset: 1676 Size:     4 [unused]
//   row_major float4x4 View_PrevClipToRelativeWorld;// Offset: 1680 Size:    64 [unused]
//   row_major float4x4 View_PrevScreenToTranslatedWorld;// Offset: 1744 Size:    64 [unused]
//   row_major float4x4 View_ClipToPrevClip;// Offset: 1808 Size:    64 [unused]
//   row_major float4x4 View_ClipToPrevClipWithAA;// Offset: 1872 Size:    64 [unused]
//   float4 View_TemporalAAJitter;      // Offset: 1936 Size:    16 [unused]
//   float4 View_GlobalClippingPlane;   // Offset: 1952 Size:    16 [unused]
//   float2 View_FieldOfViewWideAngles; // Offset: 1968 Size:     8 [unused]
//   float2 View_PrevFieldOfViewWideAngles;// Offset: 1976 Size:     8 [unused]
//   float4 View_ViewRectMin;           // Offset: 1984 Size:    16
//   float4 View_ViewSizeAndInvSize;    // Offset: 2000 Size:    16
//   float4 View_LightProbeSizeRatioAndInvSizeRatio;// Offset: 2016 Size:    16 [unused]
//   float4 View_BufferSizeAndInvSize;  // Offset: 2032 Size:    16
//   float4 View_BufferBilinearUVMinMax;// Offset: 2048 Size:    16 [unused]
//   float4 View_ScreenToViewSpace;     // Offset: 2064 Size:    16 [unused]
//   int View_NumSceneColorMSAASamples; // Offset: 2080 Size:     4 [unused]
//   float View_PreExposure;            // Offset: 2084 Size:     4 [unused]
//   float View_OneOverPreExposure;     // Offset: 2088 Size:     4 [unused]
//   float PrePadding_View_2092;        // Offset: 2092 Size:     4 [unused]
//   float4 View_DiffuseOverrideParameter;// Offset: 2096 Size:    16 [unused]
//   float4 View_SpecularOverrideParameter;// Offset: 2112 Size:    16 [unused]
//   float4 View_NormalOverrideParameter;// Offset: 2128 Size:    16 [unused]
//   float2 View_RoughnessOverrideParameter;// Offset: 2144 Size:     8 [unused]
//   float View_PrevFrameGameTime;      // Offset: 2152 Size:     4 [unused]
//   float View_PrevFrameRealTime;      // Offset: 2156 Size:     4 [unused]
//   float View_OutOfBoundsMask;        // Offset: 2160 Size:     4 [unused]
//   float PrePadding_View_2164;        // Offset: 2164 Size:     4 [unused]
//   float PrePadding_View_2168;        // Offset: 2168 Size:     4 [unused]
//   float PrePadding_View_2172;        // Offset: 2172 Size:     4 [unused]
//   float3 View_WorldCameraMovementSinceLastFrame;// Offset: 2176 Size:    12 [unused]
//   float View_CullingSign;            // Offset: 2188 Size:     4 [unused]
//   float View_NearPlane;              // Offset: 2192 Size:     4 [unused]
//   float View_GameTime;               // Offset: 2196 Size:     4 [unused]
//   float View_RealTime;               // Offset: 2200 Size:     4 [unused]
//   float View_DeltaTime;              // Offset: 2204 Size:     4 [unused]
//   float View_MaterialTextureMipBias; // Offset: 2208 Size:     4 [unused]
//   float View_MaterialTextureDerivativeMultiply;// Offset: 2212 Size:     4 [unused]
//   uint View_Random;                  // Offset: 2216 Size:     4 [unused]
//   uint View_FrameNumber;             // Offset: 2220 Size:     4 [unused]
//   uint View_StateFrameIndexMod8;     // Offset: 2224 Size:     4
//   uint View_StateFrameIndex;         // Offset: 2228 Size:     4 [unused]
//   uint View_DebugViewModeMask;       // Offset: 2232 Size:     4 [unused]
//   float View_CameraCut;              // Offset: 2236 Size:     4 [unused]
//   float View_UnlitViewmodeMask;      // Offset: 2240 Size:     4 [unused]
//   float PrePadding_View_2244;        // Offset: 2244 Size:     4 [unused]
//   float PrePadding_View_2248;        // Offset: 2248 Size:     4 [unused]
//   float PrePadding_View_2252;        // Offset: 2252 Size:     4 [unused]
//   float4 View_DirectionalLightColor; // Offset: 2256 Size:    16 [unused]
//   float3 View_DirectionalLightDirection;// Offset: 2272 Size:    12 [unused]
//   float PrePadding_View_2284;        // Offset: 2284 Size:     4 [unused]
//   float4 View_TranslucencyLightingVolumeMin[2];// Offset: 2288 Size:    32 [unused]
//   float4 View_TranslucencyLightingVolumeInvSize[2];// Offset: 2320 Size:    32 [unused]
//   float4 View_TemporalAAParams;      // Offset: 2352 Size:    16
//   float4 View_CircleDOFParams;       // Offset: 2368 Size:    16 [unused]
//   uint View_ForceDrawAllVelocities;  // Offset: 2384 Size:     4 [unused]
//   float View_DepthOfFieldSensorWidth;// Offset: 2388 Size:     4 [unused]
//   float View_DepthOfFieldFocalDistance;// Offset: 2392 Size:     4 [unused]
//   float View_DepthOfFieldScale;      // Offset: 2396 Size:     4 [unused]
//   float View_DepthOfFieldFocalLength;// Offset: 2400 Size:     4 [unused]
//   float View_DepthOfFieldFocalRegion;// Offset: 2404 Size:     4 [unused]
//   float View_DepthOfFieldNearTransitionRegion;// Offset: 2408 Size:     4 [unused]
//   float View_DepthOfFieldFarTransitionRegion;// Offset: 2412 Size:     4 [unused]
//   float View_MotionBlurNormalizedToPixel;// Offset: 2416 Size:     4 [unused]
//   float View_GeneralPurposeTweak;    // Offset: 2420 Size:     4 [unused]
//   float View_GeneralPurposeTweak2;   // Offset: 2424 Size:     4 [unused]
//   float View_DemosaicVposOffset;     // Offset: 2428 Size:     4 [unused]
//   float View_DecalDepthBias;         // Offset: 2432 Size:     4 [unused]
//   float PrePadding_View_2436;        // Offset: 2436 Size:     4 [unused]
//   float PrePadding_View_2440;        // Offset: 2440 Size:     4 [unused]
//   float PrePadding_View_2444;        // Offset: 2444 Size:     4 [unused]
//   float3 View_IndirectLightingColorScale;// Offset: 2448 Size:    12 [unused]
//   float PrePadding_View_2460;        // Offset: 2460 Size:     4 [unused]
//   float3 View_PrecomputedIndirectLightingColorScale;// Offset: 2464 Size:    12 [unused]
//   float PrePadding_View_2476;        // Offset: 2476 Size:     4 [unused]
//   float3 View_PrecomputedIndirectSpecularColorScale;// Offset: 2480 Size:    12 [unused]
//   float PrePadding_View_2492;        // Offset: 2492 Size:     4 [unused]
//   float4 View_AtmosphereLightDirection[2];// Offset: 2496 Size:    32 [unused]
//   float4 View_AtmosphereLightIlluminanceOnGroundPostTransmittance[2];// Offset: 2528 Size:    32 [unused]
//   float4 View_AtmosphereLightIlluminanceOuterSpace[2];// Offset: 2560 Size:    32 [unused]
//   float4 View_AtmosphereLightDiscLuminance[2];// Offset: 2592 Size:    32 [unused]
//   float4 View_AtmosphereLightDiscCosHalfApexAngle[2];// Offset: 2624 Size:    32 [unused]
//   float4 View_SkyViewLutSizeAndInvSize;// Offset: 2656 Size:    16 [unused]
//   float3 View_SkyCameraTranslatedWorldOrigin;// Offset: 2672 Size:    12 [unused]
//   float PrePadding_View_2684;        // Offset: 2684 Size:     4 [unused]
//   float4 View_SkyPlanetTranslatedWorldCenterAndViewHeight;// Offset: 2688 Size:    16 [unused]
//   row_major float4x4 View_SkyViewLutReferential;// Offset: 2704 Size:    64 [unused]
//   float4 View_SkyAtmosphereSkyLuminanceFactor;// Offset: 2768 Size:    16 [unused]
//   float View_SkyAtmospherePresentInScene;// Offset: 2784 Size:     4 [unused]
//   float View_SkyAtmosphereHeightFogContribution;// Offset: 2788 Size:     4 [unused]
//   float View_SkyAtmosphereBottomRadiusKm;// Offset: 2792 Size:     4 [unused]
//   float View_SkyAtmosphereTopRadiusKm;// Offset: 2796 Size:     4 [unused]
//   float4 View_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;// Offset: 2800 Size:    16 [unused]
//   float View_SkyAtmosphereAerialPerspectiveStartDepthKm;// Offset: 2816 Size:     4 [unused]
//   float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;// Offset: 2820 Size:     4 [unused]
//   float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;// Offset: 2824 Size:     4 [unused]
//   float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;// Offset: 2828 Size:     4 [unused]
//   float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;// Offset: 2832 Size:     4 [unused]
//   float View_SkyAtmosphereApplyCameraAerialPerspectiveVolume;// Offset: 2836 Size:     4 [unused]
//   float PrePadding_View_2840;        // Offset: 2840 Size:     4 [unused]
//   float PrePadding_View_2844;        // Offset: 2844 Size:     4 [unused]
//   float3 View_NormalCurvatureToRoughnessScaleBias;// Offset: 2848 Size:    12 [unused]
//   float View_RenderingReflectionCaptureMask;// Offset: 2860 Size:     4 [unused]
//   float View_RealTimeReflectionCapture;// Offset: 2864 Size:     4 [unused]
//   float View_RealTimeReflectionCapturePreExposure;// Offset: 2868 Size:     4 [unused]
//   float PrePadding_View_2872;        // Offset: 2872 Size:     4 [unused]
//   float PrePadding_View_2876;        // Offset: 2876 Size:     4 [unused]
//   float4 View_AmbientCubemapTint;    // Offset: 2880 Size:    16 [unused]
//   float View_AmbientCubemapIntensity;// Offset: 2896 Size:     4 [unused]
//   float View_SkyLightApplyPrecomputedBentNormalShadowingFlag;// Offset: 2900 Size:     4 [unused]
//   float View_SkyLightAffectReflectionFlag;// Offset: 2904 Size:     4 [unused]
//   float View_SkyLightAffectGlobalIlluminationFlag;// Offset: 2908 Size:     4 [unused]
//   float4 View_SkyLightColor;         // Offset: 2912 Size:    16 [unused]
//   float4 View_MobileSkyIrradianceEnvironmentMap[7];// Offset: 2928 Size:   112 [unused]
//   float View_MobilePreviewMode;      // Offset: 3040 Size:     4 [unused]
//   float View_HMDEyePaddingOffset;    // Offset: 3044 Size:     4 [unused]
//   float View_ReflectionCubemapMaxMip;// Offset: 3048 Size:     4 [unused]
//   float View_ShowDecalsMask;         // Offset: 3052 Size:     4 [unused]
//   uint View_DistanceFieldAOSpecularOcclusionMode;// Offset: 3056 Size:     4 [unused]
//   float View_IndirectCapsuleSelfShadowingIntensity;// Offset: 3060 Size:     4 [unused]
//   float PrePadding_View_3064;        // Offset: 3064 Size:     4 [unused]
//   float PrePadding_View_3068;        // Offset: 3068 Size:     4 [unused]
//   float3 View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;// Offset: 3072 Size:    12 [unused]
//   int View_StereoPassIndex;          // Offset: 3084 Size:     4 [unused]
//   float4 View_GlobalVolumeCenterAndExtent[6];// Offset: 3088 Size:    96 [unused]
//   float4 View_GlobalVolumeWorldToUVAddAndMul[6];// Offset: 3184 Size:    96 [unused]
//   float4 View_GlobalDistanceFieldMipWorldToUVScale[6];// Offset: 3280 Size:    96 [unused]
//   float4 View_GlobalDistanceFieldMipWorldToUVBias[6];// Offset: 3376 Size:    96 [unused]
//   float View_GlobalDistanceFieldMipFactor;// Offset: 3472 Size:     4 [unused]
//   float View_GlobalDistanceFieldMipTransition;// Offset: 3476 Size:     4 [unused]
//   int View_GlobalDistanceFieldClipmapSizeInPages;// Offset: 3480 Size:     4 [unused]
//   int PrePadding_View_3484;          // Offset: 3484 Size:     4 [unused]
//   float3 View_GlobalDistanceFieldInvPageAtlasSize;// Offset: 3488 Size:    12 [unused]
//   float PrePadding_View_3500;        // Offset: 3500 Size:     4 [unused]
//   float3 View_GlobalDistanceFieldInvCoverageAtlasSize;// Offset: 3504 Size:    12 [unused]
//   float View_GlobalVolumeDimension;  // Offset: 3516 Size:     4 [unused]
//   float View_GlobalVolumeTexelSize;  // Offset: 3520 Size:     4 [unused]
//   float View_MaxGlobalDFAOConeDistance;// Offset: 3524 Size:     4 [unused]
//   uint View_NumGlobalSDFClipmaps;    // Offset: 3528 Size:     4 [unused]
//   float View_FullyCoveredExpandSurfaceScale;// Offset: 3532 Size:     4 [unused]
//   float View_UncoveredExpandSurfaceScale;// Offset: 3536 Size:     4 [unused]
//   float View_UncoveredMinStepScale;  // Offset: 3540 Size:     4 [unused]
//   int2 View_CursorPosition;          // Offset: 3544 Size:     8 [unused]
//   float View_bCheckerboardSubsurfaceProfileRendering;// Offset: 3552 Size:     4
//   float PrePadding_View_3556;        // Offset: 3556 Size:     4 [unused]
//   float PrePadding_View_3560;        // Offset: 3560 Size:     4 [unused]
//   float PrePadding_View_3564;        // Offset: 3564 Size:     4 [unused]
//   float3 View_VolumetricFogInvGridSize;// Offset: 3568 Size:    12 [unused]
//   float PrePadding_View_3580;        // Offset: 3580 Size:     4 [unused]
//   float3 View_VolumetricFogGridZParams;// Offset: 3584 Size:    12 [unused]
//   float PrePadding_View_3596;        // Offset: 3596 Size:     4 [unused]
//   float2 View_VolumetricFogSVPosToVolumeUV;// Offset: 3600 Size:     8 [unused]
//   float View_VolumetricFogMaxDistance;// Offset: 3608 Size:     4 [unused]
//   float PrePadding_View_3612;        // Offset: 3612 Size:     4 [unused]
//   float3 View_VolumetricLightmapWorldToUVScale;// Offset: 3616 Size:    12 [unused]
//   float PrePadding_View_3628;        // Offset: 3628 Size:     4 [unused]
//   float3 View_VolumetricLightmapWorldToUVAdd;// Offset: 3632 Size:    12 [unused]
//   float PrePadding_View_3644;        // Offset: 3644 Size:     4 [unused]
//   float3 View_VolumetricLightmapIndirectionTextureSize;// Offset: 3648 Size:    12 [unused]
//   float View_VolumetricLightmapBrickSize;// Offset: 3660 Size:     4 [unused]
//   float3 View_VolumetricLightmapBrickTexelSize;// Offset: 3664 Size:    12 [unused]
//   float View_StereoIPD;              // Offset: 3676 Size:     4 [unused]
//   float View_IndirectLightingCacheShowFlag;// Offset: 3680 Size:     4 [unused]
//   float View_EyeToPixelSpreadAngle;  // Offset: 3684 Size:     4 [unused]
//   float PrePadding_View_3688;        // Offset: 3688 Size:     4 [unused]
//   float PrePadding_View_3692;        // Offset: 3692 Size:     4 [unused]
//   float4 View_XRPassthroughCameraUVs[2];// Offset: 3696 Size:    32 [unused]
//   float View_GlobalVirtualTextureMipBias;// Offset: 3728 Size:     4 [unused]
//   uint View_VirtualTextureFeedbackShift;// Offset: 3732 Size:     4 [unused]
//   uint View_VirtualTextureFeedbackMask;// Offset: 3736 Size:     4 [unused]
//   uint View_VirtualTextureFeedbackStride;// Offset: 3740 Size:     4 [unused]
//   uint View_VirtualTextureFeedbackJitterOffset;// Offset: 3744 Size:     4 [unused]
//   uint View_VirtualTextureFeedbackSampleOffset;// Offset: 3748 Size:     4 [unused]
//   uint PrePadding_View_3752;         // Offset: 3752 Size:     4 [unused]
//   uint PrePadding_View_3756;         // Offset: 3756 Size:     4 [unused]
//   float4 View_RuntimeVirtualTextureMipLevel;// Offset: 3760 Size:    16 [unused]
//   float2 View_RuntimeVirtualTexturePackHeight;// Offset: 3776 Size:     8 [unused]
//   float PrePadding_View_3784;        // Offset: 3784 Size:     4 [unused]
//   float PrePadding_View_3788;        // Offset: 3788 Size:     4 [unused]
//   float4 View_RuntimeVirtualTextureDebugParams;// Offset: 3792 Size:    16 [unused]
//   float View_OverrideLandscapeLOD;   // Offset: 3808 Size:     4 [unused]
//   int View_FarShadowStaticMeshLODBias;// Offset: 3812 Size:     4 [unused]
//   float View_MinRoughness;           // Offset: 3816 Size:     4 [unused]
//   float PrePadding_View_3820;        // Offset: 3820 Size:     4 [unused]
//   float4 View_HairRenderInfo;        // Offset: 3824 Size:    16 [unused]
//   uint View_EnableSkyLight;          // Offset: 3840 Size:     4 [unused]
//   uint View_HairRenderInfoBits;      // Offset: 3844 Size:     4 [unused]
//   uint View_HairComponents;          // Offset: 3848 Size:     4
//   float View_bSubsurfacePostprocessEnabled;// Offset: 3852 Size:     4
//   float4 View_SSProfilesTextureSizeAndInvSize;// Offset: 3856 Size:    16 [unused]
//   float4 View_SSProfilesPreIntegratedTextureSizeAndInvSize;// Offset: 3872 Size:    16 [unused]
//   float3 View_PhysicsFieldClipmapCenter;// Offset: 3888 Size:    12 [unused]
//   float View_PhysicsFieldClipmapDistance;// Offset: 3900 Size:     4 [unused]
//   int View_PhysicsFieldClipmapResolution;// Offset: 3904 Size:     4 [unused]
//   int View_PhysicsFieldClipmapExponent;// Offset: 3908 Size:     4 [unused]
//   int View_PhysicsFieldClipmapCount; // Offset: 3912 Size:     4 [unused]
//   int View_PhysicsFieldTargetCount;  // Offset: 3916 Size:     4 [unused]
//   int4 View_PhysicsFieldTargets[32]; // Offset: 3920 Size:   512 [unused]
//   uint View_InstanceSceneDataSOAStride;// Offset: 4432 Size:     4 [unused]
//   uint View_GPUSceneViewId;          // Offset: 4436 Size:     4 [unused]
//   uint PrePadding_View_4440;         // Offset: 4440 Size:     4 [unused]
//   uint PrePadding_View_4444;         // Offset: 4444 Size:     4 [unused]
//   uint PrePadding_View_4448;         // Offset: 4448 Size:     4 [unused]
//   uint PrePadding_View_4452;         // Offset: 4452 Size:     4 [unused]
//   uint PrePadding_View_4456;         // Offset: 4456 Size:     4 [unused]
//   uint PrePadding_View_4460;         // Offset: 4460 Size:     4 [unused]
//   uint PrePadding_View_4464;         // Offset: 4464 Size:     4 [unused]
//   uint PrePadding_View_4468;         // Offset: 4468 Size:     4 [unused]
//   uint PrePadding_View_4472;         // Offset: 4472 Size:     4 [unused]
//   uint PrePadding_View_4476;         // Offset: 4476 Size:     4 [unused]
//   uint PrePadding_View_4480;         // Offset: 4480 Size:     4 [unused]
//   uint PrePadding_View_4484;         // Offset: 4484 Size:     4 [unused]
//   uint PrePadding_View_4488;         // Offset: 4488 Size:     4 [unused]
//   uint PrePadding_View_4492;         // Offset: 4492 Size:     4 [unused]
//   uint PrePadding_View_4496;         // Offset: 4496 Size:     4 [unused]
//   uint PrePadding_View_4500;         // Offset: 4500 Size:     4 [unused]
//   uint PrePadding_View_4504;         // Offset: 4504 Size:     4 [unused]
//   uint PrePadding_View_4508;         // Offset: 4508 Size:     4 [unused]
//   uint PrePadding_View_4512;         // Offset: 4512 Size:     4 [unused]
//   uint PrePadding_View_4516;         // Offset: 4516 Size:     4 [unused]
//   uint PrePadding_View_4520;         // Offset: 4520 Size:     4 [unused]
//   uint PrePadding_View_4524;         // Offset: 4524 Size:     4 [unused]
//   uint PrePadding_View_4528;         // Offset: 4528 Size:     4 [unused]
//   uint PrePadding_View_4532;         // Offset: 4532 Size:     4 [unused]
//   uint PrePadding_View_4536;         // Offset: 4536 Size:     4 [unused]
//   uint PrePadding_View_4540;         // Offset: 4540 Size:     4 [unused]
//   uint PrePadding_View_4544;         // Offset: 4544 Size:     4 [unused]
//   uint PrePadding_View_4548;         // Offset: 4548 Size:     4 [unused]
//   uint PrePadding_View_4552;         // Offset: 4552 Size:     4 [unused]
//   uint PrePadding_View_4556;         // Offset: 4556 Size:     4 [unused]
//   uint PrePadding_View_4560;         // Offset: 4560 Size:     4 [unused]
//   uint PrePadding_View_4564;         // Offset: 4564 Size:     4 [unused]
//   uint PrePadding_View_4568;         // Offset: 4568 Size:     4 [unused]
//   uint PrePadding_View_4572;         // Offset: 4572 Size:     4 [unused]
//   uint PrePadding_View_4576;         // Offset: 4576 Size:     4 [unused]
//   uint PrePadding_View_4580;         // Offset: 4580 Size:     4 [unused]
//   uint PrePadding_View_4584;         // Offset: 4584 Size:     4 [unused]
//   uint PrePadding_View_4588;         // Offset: 4588 Size:     4 [unused]
//   uint PrePadding_View_4592;         // Offset: 4592 Size:     4 [unused]
//   uint PrePadding_View_4596;         // Offset: 4596 Size:     4 [unused]
//   uint PrePadding_View_4600;         // Offset: 4600 Size:     4 [unused]
//   uint PrePadding_View_4604;         // Offset: 4604 Size:     4 [unused]
//   uint PrePadding_View_4608;         // Offset: 4608 Size:     4 [unused]
//   uint PrePadding_View_4612;         // Offset: 4612 Size:     4 [unused]
//   uint PrePadding_View_4616;         // Offset: 4616 Size:     4 [unused]
//   uint PrePadding_View_4620;         // Offset: 4620 Size:     4 [unused]
//   uint PrePadding_View_4624;         // Offset: 4624 Size:     4 [unused]
//   uint PrePadding_View_4628;         // Offset: 4628 Size:     4 [unused]
//   uint PrePadding_View_4632;         // Offset: 4632 Size:     4 [unused]
//   uint PrePadding_View_4636;         // Offset: 4636 Size:     4 [unused]
//   uint PrePadding_View_4640;         // Offset: 4640 Size:     4 [unused]
//   uint PrePadding_View_4644;         // Offset: 4644 Size:     4 [unused]
//   uint PrePadding_View_4648;         // Offset: 4648 Size:     4 [unused]
//   uint PrePadding_View_4652;         // Offset: 4652 Size:     4 [unused]
//   uint PrePadding_View_4656;         // Offset: 4656 Size:     4 [unused]
//   uint PrePadding_View_4660;         // Offset: 4660 Size:     4 [unused]
//   uint PrePadding_View_4664;         // Offset: 4664 Size:     4 [unused]
//   uint PrePadding_View_4668;         // Offset: 4668 Size:     4 [unused]
//   uint PrePadding_View_4672;         // Offset: 4672 Size:     4 [unused]
//   uint PrePadding_View_4676;         // Offset: 4676 Size:     4 [unused]
//   uint PrePadding_View_4680;         // Offset: 4680 Size:     4 [unused]
//   uint PrePadding_View_4684;         // Offset: 4684 Size:     4 [unused]
//   uint PrePadding_View_4688;         // Offset: 4688 Size:     4 [unused]
//   uint PrePadding_View_4692;         // Offset: 4692 Size:     4 [unused]
//   uint PrePadding_View_4696;         // Offset: 4696 Size:     4 [unused]
//   uint PrePadding_View_4700;         // Offset: 4700 Size:     4 [unused]
//   uint PrePadding_View_4704;         // Offset: 4704 Size:     4 [unused]
//   uint PrePadding_View_4708;         // Offset: 4708 Size:     4 [unused]
//   uint PrePadding_View_4712;         // Offset: 4712 Size:     4 [unused]
//   uint PrePadding_View_4716;         // Offset: 4716 Size:     4 [unused]
//   uint PrePadding_View_4720;         // Offset: 4720 Size:     4 [unused]
//   uint PrePadding_View_4724;         // Offset: 4724 Size:     4 [unused]
//   uint PrePadding_View_4728;         // Offset: 4728 Size:     4 [unused]
//   uint PrePadding_View_4732;         // Offset: 4732 Size:     4 [unused]
//   uint PrePadding_View_4736;         // Offset: 4736 Size:     4 [unused]
//   uint PrePadding_View_4740;         // Offset: 4740 Size:     4 [unused]
//   uint PrePadding_View_4744;         // Offset: 4744 Size:     4 [unused]
//   uint PrePadding_View_4748;         // Offset: 4748 Size:     4 [unused]
//   uint PrePadding_View_4752;         // Offset: 4752 Size:     4 [unused]
//   uint PrePadding_View_4756;         // Offset: 4756 Size:     4 [unused]
//   uint PrePadding_View_4760;         // Offset: 4760 Size:     4 [unused]
//   uint PrePadding_View_4764;         // Offset: 4764 Size:     4 [unused]
//   uint PrePadding_View_4768;         // Offset: 4768 Size:     4 [unused]
//   uint PrePadding_View_4772;         // Offset: 4772 Size:     4 [unused]
//   uint PrePadding_View_4776;         // Offset: 4776 Size:     4 [unused]
//   uint PrePadding_View_4780;         // Offset: 4780 Size:     4 [unused]
//   uint PrePadding_View_4784;         // Offset: 4784 Size:     4 [unused]
//   uint PrePadding_View_4788;         // Offset: 4788 Size:     4 [unused]
//   uint PrePadding_View_4792;         // Offset: 4792 Size:     4 [unused]
//   uint PrePadding_View_4796;         // Offset: 4796 Size:     4 [unused]
//   uint PrePadding_View_4800;         // Offset: 4800 Size:     4 [unused]
//   uint PrePadding_View_4804;         // Offset: 4804 Size:     4 [unused]
//   uint PrePadding_View_4808;         // Offset: 4808 Size:     4 [unused]
//   uint PrePadding_View_4812;         // Offset: 4812 Size:     4 [unused]
//   uint PrePadding_View_4816;         // Offset: 4816 Size:     4 [unused]
//   uint PrePadding_View_4820;         // Offset: 4820 Size:     4 [unused]
//   uint PrePadding_View_4824;         // Offset: 4824 Size:     4 [unused]
//   uint PrePadding_View_4828;         // Offset: 4828 Size:     4 [unused]
//   uint PrePadding_View_4832;         // Offset: 4832 Size:     4 [unused]
//   uint PrePadding_View_4836;         // Offset: 4836 Size:     4 [unused]
//   uint PrePadding_View_4840;         // Offset: 4840 Size:     4 [unused]
//   uint PrePadding_View_4844;         // Offset: 4844 Size:     4 [unused]
//   uint PrePadding_View_4848;         // Offset: 4848 Size:     4 [unused]
//   uint PrePadding_View_4852;         // Offset: 4852 Size:     4 [unused]
//   uint PrePadding_View_4856;         // Offset: 4856 Size:     4 [unused]
//   uint PrePadding_View_4860;         // Offset: 4860 Size:     4 [unused]
//   uint PrePadding_View_4864;         // Offset: 4864 Size:     4 [unused]
//   uint PrePadding_View_4868;         // Offset: 4868 Size:     4 [unused]
//   uint PrePadding_View_4872;         // Offset: 4872 Size:     4 [unused]
//   uint PrePadding_View_4876;         // Offset: 4876 Size:     4 [unused]
//   uint PrePadding_View_4880;         // Offset: 4880 Size:     4 [unused]
//   uint PrePadding_View_4884;         // Offset: 4884 Size:     4 [unused]
//   uint PrePadding_View_4888;         // Offset: 4888 Size:     4 [unused]
//   uint PrePadding_View_4892;         // Offset: 4892 Size:     4 [unused]
//   uint PrePadding_View_4896;         // Offset: 4896 Size:     4 [unused]
//   uint PrePadding_View_4900;         // Offset: 4900 Size:     4 [unused]
//   uint PrePadding_View_4904;         // Offset: 4904 Size:     4 [unused]
//   uint PrePadding_View_4908;         // Offset: 4908 Size:     4 [unused]
//   uint PrePadding_View_4912;         // Offset: 4912 Size:     4 [unused]
//   uint PrePadding_View_4916;         // Offset: 4916 Size:     4 [unused]
//   uint PrePadding_View_4920;         // Offset: 4920 Size:     4 [unused]
//   uint PrePadding_View_4924;         // Offset: 4924 Size:     4 [unused]
//   uint PrePadding_View_4928;         // Offset: 4928 Size:     4 [unused]
//   uint PrePadding_View_4932;         // Offset: 4932 Size:     4 [unused]
//   uint PrePadding_View_4936;         // Offset: 4936 Size:     4 [unused]
//   uint PrePadding_View_4940;         // Offset: 4940 Size:     4 [unused]
//   uint PrePadding_View_4944;         // Offset: 4944 Size:     4 [unused]
//   uint PrePadding_View_4948;         // Offset: 4948 Size:     4 [unused]
//   uint View_bShadingEnergyConservation;// Offset: 4952 Size:     4 [unused]
//   uint View_bShadingEnergyPreservation;// Offset: 4956 Size:     4 [unused]
//
// }
//
// Resource bind info for AdaptiveScreenProbeData
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for IntegrateTileData
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// View_SharedBilinearClampedSampler    sampler      NA          NA             s0      1 
// View_HairScatteringLUTSampler     sampler      NA          NA             s1      1 
// SceneTexturesStruct_PointClampSampler    sampler      NA          NA             s2      1 
// View_HairScatteringLUTTexture     texture  float4          3d             t0      1 
// SceneTexturesStruct_SceneDepthTexture    texture  float4          2d             t1      1 
// SceneTexturesStruct_GBufferATexture    texture  float4          2d             t2      1 
// SceneTexturesStruct_GBufferBTexture    texture  float4          2d             t3      1 
// SceneTexturesStruct_GBufferCTexture    texture  float4          2d             t4      1 
// SceneTexturesStruct_GBufferDTexture    texture  float4          2d             t5      1 
// ScreenProbeSceneDepth             texture    uint          2d             t6      1 
// AdaptiveScreenProbeData           texture  struct         r/o             t7      1 
// ScreenTileAdaptiveProbeHeader     texture    uint          2d             t8      1 
// ScreenTileAdaptiveProbeIndices    texture    uint          2d             t9      1 
// ScreenProbeMoving                 texture   float          2d            t10      1 
// ScreenBentNormal                  texture  float3          2d            t11      1 
// ScreenProbeRadianceSHAmbient      texture  float3          2d            t12      1 
// ScreenProbeRadianceSHDirectional    texture  float4          2d            t13      1 
// ScreenProbeRadianceWithBorder     texture  float3          2d            t14      1 
// IntegrateTileData                 texture  struct         r/o            t15      1 
// RWDiffuseIndirect                     UAV  float4          2d             u0      1 
// RWRoughSpecularIndirect               UAV  float3          2d             u1      1 
// _RootShaderParameters             cbuffer      NA          NA            cb0      1 
// View                              cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[26], immediateIndexed
dcl_constantbuffer CB1[241], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture3d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (uint,uint,uint,uint) t6
dcl_resource_structured t7, 4
dcl_resource_texture2d (uint,uint,uint,uint) t8
dcl_resource_texture2d (uint,uint,uint,uint) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_structured t15, 4
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_uav_typed_texture2d (float,float,float,float) u1
dcl_input vThreadGroupID.x
dcl_input vThreadIDInGroup.xy
dcl_temps 28
dcl_thread_group 8, 8, 1
ishl r0.x, cb0[25].x, l(1)
imad r0.x, r0.x, cb0[25].y, vThreadGroupID.x
ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.x, r0.x, l(0), t15.xxxx
and r1.x, r0.x, l(0x0000ffff)
ushr r1.y, r0.x, l(16)
imad r0.xy, r1.xyxx, l(8, 8, 0, 0), vThreadIDInGroup.xyxx
mov r0.z, l(0)
ld_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.xyzz, t3.xyzw
mad r1.w, r1.w, l(255.000000), l(0.500000)
ftou r1.w, r1.w
and r1.w, r1.w, l(15)
if_nz r1.w
  ld_indexable(texture2d)(float,float,float,float) r2.x, r0.xyzz, t1.xyzw
  mad r2.y, r2.x, cb1[67].x, cb1[67].y
  mad r2.x, r2.x, cb1[67].z, -cb1[67].w
  div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
  add r2.z, r2.x, r2.y
  ld_indexable(texture2d)(float,float,float,float) r3.xyz, r0.xyzz, t2.xyzw
  ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r0.xyzz, t4.xyzw
  ld_indexable(texture2d)(float,float,float,float) r5.xy, r0.xyzz, t5.zwxy
  ftou r3.w, cb1[147].x
  iadd r5.z, r0.y, r0.x
  iadd r3.w, r3.w, r5.z
  and r3.w, r3.w, l(1)
  mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  ieq r6.xyzw, r1.wwww, l(2, 3, 4, 5)
  or r5.z, r6.y, r6.x
  or r5.z, r6.z, r5.z
  or r5.z, r6.w, r5.z
  ieq r7.xyzw, r1.wwww, l(6, 7, 8, 9)
  or r5.z, r5.z, r7.x
  or r5.z, r7.y, r5.z
  or r5.z, r7.z, r5.z
  or r5.z, r7.w, r5.z
  and r5.xy, r5.xyxx, r5.zzzz
  dp3 r5.z, r3.xyzx, r3.xyzx
  rsq r5.z, r5.z
  mul r8.xyz, r3.xyzx, r5.zzzz
  movc r1.x, r7.w, l(0), r1.x
  or r5.w, r6.w, r7.w
  lt r6.x, l(0.000000), cb1[240].w
  lt r6.y, l(0.000000), cb1[222].x
  and r6.x, r6.y, r6.x
  ne r6.y, l(0.000000, 0.000000, 0.000000, 0.000000), cb1[240].w
  movc r7.xyz, r6.yyyy, l(1.000000,1.000000,1.000000,0), r4.xyzx
  movc r9.xy, r3.wwww, l(1.000000,0,0,0), l(0,1.000000,0,0)
  mul r9.z, r1.y, r9.y
  mov r7.w, r1.y
  movc r9.xyzw, r6.xxxx, r9.xxxz, r7.xyzw
  mov r7.xyz, r4.xyzx
  movc r7.xyzw, r5.wwww, r9.xyzw, r7.xyzw
  utof r4.xy, r0.xyxx
  add r6.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r6.xy, r6.xyxx, cb1[127].zwzz, -cb1[68].wzww
  div r6.xy, r6.xyxx, cb1[68].xyxx
  mul r2.xy, r2.zzzz, r6.xyxx
  mad r9.xyw, cb1[61].xyxz, l(2097152.000000, 2097152.000000, 0.000000, 2097152.000000), cb1[51].xyxz
  mov r2.w, l(1.000000)
  mov r10.x, cb1[48].x
  mov r10.y, cb1[49].x
  mov r10.z, cb1[50].x
  mov r10.w, r9.x
  dp4 r11.x, r2.xyzw, r10.xyzw
  mov r12.x, cb1[48].y
  mov r12.y, cb1[49].y
  mov r12.z, cb1[50].y
  mov r12.w, r9.y
  dp4 r11.y, r2.xyzw, r12.xyzw
  mov r9.x, cb1[48].z
  mov r9.y, cb1[49].z
  mov r9.z, cb1[50].z
  dp4 r11.z, r2.xyzw, r9.xyzw
  lt r1.y, l(0.000000), cb0[24].x
  if_nz r1.y
    add r1.y, r2.z, l(-500.000000)
    mul_sat r1.y, r1.y, l(0.002000)
    mad r1.y, r1.y, l(-0.500000), l(1.000000)
    mul r1.y, r1.y, cb0[24].x
    ilt r2.x, cb0[7].w, l(0)
    movc r0.w, r2.x, cb1[139].x, cb0[7].w
    imad r2.xyw, r0.xyxw, l(0x0019660d, 0x0019660d, 0, 0x0019660d), l(0x3c6ef35f, 0x3c6ef35f, 0, 0x3c6ef35f)
    imad r0.w, r2.y, r2.w, r2.x
    imad r2.x, r2.w, r0.w, r2.y
    imad r2.y, r0.w, r2.x, r2.w
    imad r6.x, r2.x, r2.y, r0.w
    imad r6.y, r2.y, r6.x, r2.x
    ushr r2.xy, r6.xyxx, l(16, 16, 0, 0)
    utof r0.w, r2.x
    mul r0.w, r0.w, l(0.000015)
    frc r6.x, r0.w
    xor r0.w, r2.y, l(0)
    utof r6.y, r0.w
    mad r2.xy, r6.xyxx, l(2.000000, 0.000031, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
    utof r0.w, cb0[2].w
    mul r2.xy, r0.wwww, r2.xyxx
    mul r6.xy, r1.yyyy, r2.xyxx
    mad r2.xy, r2.xyxx, r1.yyyy, r4.xyxx
    add r13.xy, cb1[125].xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
    max r2.xy, r2.xyxx, cb1[124].xyxx
    min r2.xy, r13.xyxx, r2.xyxx
    mul r13.xy, r2.xyxx, cb1[127].zwzz
    sample_l_indexable(texture2d)(float,float,float,float) r0.w, r13.xyxx, t1.yzwx, s2, l(0.000000)
    mad r1.y, r0.w, cb1[67].x, cb1[67].y
    mad r0.w, r0.w, cb1[67].z, -cb1[67].w
    div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
    add r13.z, r0.w, r1.y
    dp3 r8.w, r11.xyzx, r8.xyzx
    mad r2.xy, r2.xyxx, cb1[127].zwzz, -cb1[68].wzww
    div r2.xy, r2.xyxx, cb1[68].xyxx
    mul r13.xy, r13.zzzz, r2.xyxx
    mov r13.w, l(1.000000)
    dp4 r14.x, r13.xyzw, r10.xyzw
    dp4 r14.y, r13.xyzw, r12.xyzw
    dp4 r14.z, r13.xyzw, r9.xyzw
    mov r14.w, l(-1.000000)
    dp4 r0.w, r14.xyzw, r8.xyzw
    div r0.w, |r0.w|, r2.z
    mul r0.w, r0.w, r0.w
    mul r0.w, r0.w, l(-1000000.000000)
    exp r0.w, r0.w
    lt r0.w, l(0.010000), r0.w
    and r2.xy, r6.xyxx, r0.wwww
  else 
    mov r2.xy, l(0,0,0,0)
  endif 
  add r6.xy, r4.xyxx, -cb1[124].xyxx
  ilt r0.w, cb0[7].w, l(0)
  movc r0.w, r0.w, cb1[139].x, cb0[7].w
  utof r1.y, r0.w
  mul r2.w, r1.y, l(0.125000)
  frc r13.x, r2.w
  bfrev r0.w, r0.w
  ushr r0.w, r0.w, l(16)
  xor r0.w, r0.w, l(0)
  utof r0.w, r0.w
  mul r13.y, r0.w, l(0.000015)
  utof r0.w, cb0[2].w
  mul r13.xy, r0.wwww, r13.xyxx
  ftou r13.xy, r13.xyxx
  utof r13.zw, r13.xxxy
  add r6.xy, r6.xyxx, -r13.zwzz
  add r2.xy, r2.xyxx, r6.xyxx
  add r6.xy, cb1[125].xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
  max r2.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r2.xy, r6.xyxx, r2.xyxx
  ftou r2.xy, r2.xyxx
  udiv r6.xy, null, r2.xyxx, cb0[2].wwww
  iadd r13.zw, l(0, 0, -2, -2), cb0[3].xxxy
  umin r14.xy, r6.xyxx, r13.zwzz
  imad r2.xy, -r14.xyxx, cb0[2].wwww, r2.xyxx
  iadd r2.xy, r2.xyxx, l(1, 1, 0, 0)
  iadd r2.w, l(2), cb0[2].w
  utof r2.xyw, r2.xyxw
  div r2.xy, r2.xyxx, r2.wwww
  mov r14.zw, l(0,0,0,0)
  ld_indexable(texture2d)(uint,uint,uint,uint) r15.z, r14.xyww, t6.yzxw
  iadd r16.xyzw, r14.xyxy, l(0, 1, 1, 0)
  mov r17.xy, r16.zwzz
  mov r17.zw, l(0,0,0,0)
  ld_indexable(texture2d)(uint,uint,uint,uint) r18.z, r17.xyww, t6.yzxw
  mov r19.xy, r16.xyxx
  mov r19.zw, l(0,0,0,0)
  ld_indexable(texture2d)(uint,uint,uint,uint) r20.z, r19.xyww, t6.yzxw
  iadd r21.xy, r14.xyxx, l(1, 1, 0, 0)
  mov r21.zw, l(0,0,0,0)
  ld_indexable(texture2d)(uint,uint,uint,uint) r22.w, r21.xyww, t6.yzwx
  add r6.xy, -r2.yxyy, l(1.000000, 1.000000, 0.000000, 0.000000)
  mul r23.x, r6.y, r6.x
  mul r23.yz, r2.xxyx, r6.xxyx
  mul r23.w, r2.x, r2.y
  dp3 r8.w, r11.xyzx, r8.xyzx
  imad r2.xy, r14.xyxx, cb0[2].wwww, r13.xyxx
  ftou r6.xy, cb1[124].xyxx
  iadd r2.xy, r2.xyxx, r6.xyxx
  utof r2.xy, r2.xyxx
  add r2.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r2.xy, r2.xyxx, cb1[127].zwzz, -cb1[68].wzww
  div r2.xy, r2.xyxx, cb1[68].xyxx
  mul r15.xy, r15.zzzz, r2.xyxx
  mov r15.w, l(1.000000)
  dp4 r24.x, r15.xyzw, r10.xyzw
  dp4 r24.y, r15.xyzw, r12.xyzw
  dp4 r24.z, r15.xyzw, r9.xyzw
  imad r25.xyzw, r16.zwxy, cb0[2].wwww, r13.xyxy
  iadd r25.xyzw, r6.xyxy, r25.xyzw
  utof r25.xyzw, r25.xyzw
  add r25.xyzw, r25.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
  mad r25.xyzw, r25.xyzw, cb1[127].zwzw, -cb1[68].wzwz
  div r25.xyzw, r25.xyzw, cb1[68].xyxy
  mul r18.xy, r18.zzzz, r25.xyxx
  mov r18.w, l(1.000000)
  dp4 r26.x, r18.xyzw, r10.xyzw
  dp4 r26.y, r18.xyzw, r12.xyzw
  dp4 r26.z, r18.xyzw, r9.xyzw
  mul r20.xy, r20.zzzz, r25.zwzz
  mov r20.w, l(1.000000)
  dp4 r25.x, r20.xyzw, r10.xyzw
  dp4 r25.y, r20.xyzw, r12.xyzw
  dp4 r25.z, r20.xyzw, r9.xyzw
  imad r2.xy, r21.xyxx, cb0[2].wwww, r13.xyxx
  iadd r2.xy, r6.xyxx, r2.xyxx
  utof r2.xy, r2.xyxx
  add r2.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r2.xy, r2.xyxx, cb1[127].zwzz, -cb1[68].wzww
  div r2.xy, r2.xyxx, cb1[68].xyxx
  mul r22.xy, r22.wwww, r2.xyxx
  mov r22.z, l(1.000000)
  dp4 r27.x, r22.xywz, r10.xyzw
  dp4 r27.y, r22.xywz, r12.xyzw
  dp4 r27.z, r22.xywz, r9.xyzw
  mov r24.w, l(-1.000000)
  dp4 r2.x, r24.xyzw, r8.xyzw
  mov r24.x, |r2.x|
  mov r26.w, l(-1.000000)
  dp4 r2.x, r26.xyzw, r8.xyzw
  mov r24.y, |r2.x|
  mov r25.w, l(-1.000000)
  dp4 r2.x, r25.xyzw, r8.xyzw
  mov r24.z, |r2.x|
  mov r27.w, l(-1.000000)
  dp4 r2.x, r27.xyzw, r8.xyzw
  mov r24.w, |r2.x|
  div r24.xyzw, r24.xyzw, r2.zzzz
  mov r22.x, r15.z
  mov r22.y, r18.z
  mov r22.z, r20.z
  lt r15.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r22.xyzw
  mul r18.xyzw, r24.xyzw, r24.xyzw
  mul r18.xyzw, r18.xyzw, l(-10000.000000, -10000.000000, -10000.000000, -10000.000000)
  exp r18.xyzw, r18.xyzw
  and r15.xyzw, r15.xyzw, r18.xyzw
  mul r15.xyzw, r15.xyzw, r23.xyzw
  ge r18.xyzw, l(0.010000, 0.010000, 0.010000, 0.010000), r15.xyzw
  if_nz r18.x
    ld_indexable(texture2d)(uint,uint,uint,uint) r2.x, r14.xyzw, t8.xyzw
    add r2.yw, cb1[124].xxxy, cb1[125].xxxy
    add r2.yw, r2.yyyw, l(0.000000, -1.000000, 0.000000, -1.000000)
    mov r20.zw, l(0,0,0,0)
    mov r22.z, l(0)
    mov r23.w, l(1.000000)
    mov r24.w, l(-1.000000)
    mov r25.xy, r14.xyxx
    mov r3.w, cb0[7].y
    mov r25.z, r15.x
    mov r4.z, l(0)
    loop 
      uge r5.w, r4.z, r2.x
      breakc_nz r5.w
      udiv r18.x, r26.x, r4.z, cb0[2].w
      mov r26.y, r18.x
      imad r20.xy, r26.xyxx, cb0[3].xyxx, r14.xyxx
      ld_indexable(texture2d)(uint,uint,uint,uint) r5.w, r20.xyzw, t9.yzwx
      iadd r5.w, r3.w, r5.w
      udiv r18.x, r20.x, r5.w, cb0[3].x
      mov r20.y, r18.x
      imad r13.zw, r20.xxxy, cb0[2].wwww, r13.xxxy
      iadd r13.zw, r6.xxxy, r13.zzzw
      uge r6.w, r5.w, r3.w
      iadd r11.w, -r3.w, r5.w
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(0), t7.xxxx
      and r20.x, r11.w, l(0x0000ffff)
      ushr r20.y, r11.w, l(16)
      movc r13.zw, r6.wwww, r20.xxxy, r13.zzzw
      udiv r18.x, r22.x, r5.w, cb0[3].z
      mov r22.y, r18.x
      ld_indexable(texture2d)(uint,uint,uint,uint) r23.z, r22.xyzz, t6.yzxw
      utof r13.zw, r13.zzzw
      min r14.zw, r2.yyyw, r13.zzzw
      add r14.zw, r14.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
      mad r14.zw, r14.zzzw, cb1[127].zzzw, -cb1[68].wwwz
      div r14.zw, r14.zzzw, cb1[68].xxxy
      mul r23.xy, r23.zzzz, r14.zwzz
      dp4 r24.x, r23.xyzw, r10.xyzw
      dp4 r24.y, r23.xyzw, r12.xyzw
      dp4 r24.z, r23.xyzw, r9.xyzw
      dp4 r5.w, r24.xyzw, r8.xyzw
      div r5.w, |r5.w|, r2.z
      mul r5.w, r5.w, r5.w
      mul r5.w, r5.w, l(-10000.000000)
      exp r5.w, r5.w
      add r13.zw, -r4.xxxy, r13.zzzw
      min r6.w, |r13.w|, |r13.z|
      div r6.w, r6.w, r0.w
      min r6.w, r6.w, l(1.000000)
      add r6.w, -r6.w, l(1.000000)
      mul r22.w, r5.w, r6.w
      lt r5.w, r25.z, r22.w
      movc r25.xyz, r5.wwww, r22.xywx, r25.xyzx
      iadd r4.z, r4.z, l(1)
    endloop 
    mov r14.xy, r25.xyxx
    mov r15.x, r25.z
  endif 
  if_nz r18.y
    ld_indexable(texture2d)(uint,uint,uint,uint) r2.x, r17.xyzw, t8.xyzw
    add r2.yw, cb1[124].xxxy, cb1[125].xxxy
    add r2.yw, r2.yyyw, l(0.000000, -1.000000, 0.000000, -1.000000)
    mov r20.zw, l(0,0,0,0)
    mov r22.z, l(0)
    mov r23.w, l(1.000000)
    mov r24.w, l(-1.000000)
    mov r25.xy, r17.xyxx
    mov r3.w, cb0[7].y
    mov r25.z, r15.y
    mov r4.z, l(0)
    loop 
      uge r5.w, r4.z, r2.x
      breakc_nz r5.w
      udiv r18.x, r26.x, r4.z, cb0[2].w
      mov r26.y, r18.x
      imad r20.xy, r26.xyxx, cb0[3].xyxx, r17.xyxx
      ld_indexable(texture2d)(uint,uint,uint,uint) r5.w, r20.xyzw, t9.yzwx
      iadd r5.w, r3.w, r5.w
      udiv r18.x, r20.x, r5.w, cb0[3].x
      mov r20.y, r18.x
      imad r13.zw, r20.xxxy, cb0[2].wwww, r13.xxxy
      iadd r13.zw, r6.xxxy, r13.zzzw
      uge r6.w, r5.w, r3.w
      iadd r11.w, -r3.w, r5.w
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(0), t7.xxxx
      and r18.x, r11.w, l(0x0000ffff)
      ushr r18.y, r11.w, l(16)
      movc r13.zw, r6.wwww, r18.xxxy, r13.zzzw
      udiv r18.x, r22.x, r5.w, cb0[3].z
      mov r22.y, r18.x
      ld_indexable(texture2d)(uint,uint,uint,uint) r23.z, r22.xyzz, t6.yzxw
      utof r13.zw, r13.zzzw
      min r14.zw, r2.yyyw, r13.zzzw
      add r14.zw, r14.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
      mad r14.zw, r14.zzzw, cb1[127].zzzw, -cb1[68].wwwz
      div r14.zw, r14.zzzw, cb1[68].xxxy
      mul r23.xy, r23.zzzz, r14.zwzz
      dp4 r24.x, r23.xyzw, r10.xyzw
      dp4 r24.y, r23.xyzw, r12.xyzw
      dp4 r24.z, r23.xyzw, r9.xyzw
      dp4 r5.w, r24.xyzw, r8.xyzw
      div r5.w, |r5.w|, r2.z
      mul r5.w, r5.w, r5.w
      mul r5.w, r5.w, l(-10000.000000)
      exp r5.w, r5.w
      add r13.zw, -r4.xxxy, r13.zzzw
      min r6.w, |r13.w|, |r13.z|
      div r6.w, r6.w, r0.w
      min r6.w, r6.w, l(1.000000)
      add r6.w, -r6.w, l(1.000000)
      mul r22.w, r5.w, r6.w
      lt r5.w, r25.z, r22.w
      movc r25.xyz, r5.wwww, r22.xywx, r25.xyzx
      iadd r4.z, r4.z, l(1)
    endloop 
    mov r17.xy, r25.xyxx
    mov r15.y, r25.z
  endif 
  if_nz r18.z
    ld_indexable(texture2d)(uint,uint,uint,uint) r2.x, r19.xyzw, t8.xyzw
    add r2.yw, cb1[124].xxxy, cb1[125].xxxy
    add r2.yw, r2.yyyw, l(0.000000, -1.000000, 0.000000, -1.000000)
    mov r19.zw, l(0,0,0,0)
    mov r20.z, l(0)
    mov r22.w, l(1.000000)
    mov r23.w, l(-1.000000)
    mov r18.xy, r16.xyxx
    mov r3.w, cb0[7].y
    mov r18.z, r15.z
    mov r4.z, l(0)
    loop 
      uge r5.w, r4.z, r2.x
      breakc_nz r5.w
      udiv r24.x, r25.x, r4.z, cb0[2].w
      mov r25.y, r24.x
      imad r19.xy, r25.xyxx, cb0[3].xyxx, r16.xyxx
      ld_indexable(texture2d)(uint,uint,uint,uint) r5.w, r19.xyzw, t9.yzwx
      iadd r5.w, r3.w, r5.w
      udiv r19.x, r24.x, r5.w, cb0[3].x
      mov r24.y, r19.x
      imad r13.zw, r24.xxxy, cb0[2].wwww, r13.xxxy
      iadd r13.zw, r6.xxxy, r13.zzzw
      uge r6.w, r5.w, r3.w
      iadd r11.w, -r3.w, r5.w
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(0), t7.xxxx
      and r19.x, r11.w, l(0x0000ffff)
      ushr r19.y, r11.w, l(16)
      movc r13.zw, r6.wwww, r19.xxxy, r13.zzzw
      udiv r19.x, r20.x, r5.w, cb0[3].z
      mov r20.y, r19.x
      ld_indexable(texture2d)(uint,uint,uint,uint) r22.z, r20.xyzz, t6.yzxw
      utof r13.zw, r13.zzzw
      min r14.zw, r2.yyyw, r13.zzzw
      add r14.zw, r14.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
      mad r14.zw, r14.zzzw, cb1[127].zzzw, -cb1[68].wwwz
      div r14.zw, r14.zzzw, cb1[68].xxxy
      mul r22.xy, r22.zzzz, r14.zwzz
      dp4 r23.x, r22.xyzw, r10.xyzw
      dp4 r23.y, r22.xyzw, r12.xyzw
      dp4 r23.z, r22.xyzw, r9.xyzw
      dp4 r5.w, r23.xyzw, r8.xyzw
      div r5.w, |r5.w|, r2.z
      mul r5.w, r5.w, r5.w
      mul r5.w, r5.w, l(-10000.000000)
      exp r5.w, r5.w
      add r13.zw, -r4.xxxy, r13.zzzw
      min r6.w, |r13.w|, |r13.z|
      div r6.w, r6.w, r0.w
      min r6.w, r6.w, l(1.000000)
      add r6.w, -r6.w, l(1.000000)
      mul r20.w, r5.w, r6.w
      lt r5.w, r18.z, r20.w
      movc r18.xyz, r5.wwww, r20.xywx, r18.xyzx
      iadd r4.z, r4.z, l(1)
    endloop 
    mov r16.xy, r18.xyxx
    mov r15.z, r18.z
  endif 
  if_nz r18.w
    ld_indexable(texture2d)(uint,uint,uint,uint) r2.x, r21.xyzw, t8.xyzw
    add r2.yw, cb1[124].xxxy, cb1[125].xxxy
    add r2.yw, r2.yyyw, l(0.000000, -1.000000, 0.000000, -1.000000)
    mov r18.zw, l(0,0,0,0)
    mov r19.z, l(0)
    mov r20.w, l(1.000000)
    mov r22.w, l(-1.000000)
    mov r23.xy, r21.xyxx
    mov r3.w, cb0[7].y
    mov r23.z, r15.w
    mov r4.z, l(0)
    loop 
      uge r5.w, r4.z, r2.x
      breakc_nz r5.w
      udiv r24.x, r25.x, r4.z, cb0[2].w
      mov r25.y, r24.x
      imad r18.xy, r25.xyxx, cb0[3].xyxx, r21.xyxx
      ld_indexable(texture2d)(uint,uint,uint,uint) r5.w, r18.xyzw, t9.yzwx
      iadd r5.w, r3.w, r5.w
      udiv r18.x, r24.x, r5.w, cb0[3].x
      mov r24.y, r18.x
      imad r13.zw, r24.xxxy, cb0[2].wwww, r13.xxxy
      iadd r13.zw, r6.xxxy, r13.zzzw
      uge r6.w, r5.w, r3.w
      iadd r11.w, -r3.w, r5.w
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(0), t7.xxxx
      and r18.x, r11.w, l(0x0000ffff)
      ushr r18.y, r11.w, l(16)
      movc r13.zw, r6.wwww, r18.xxxy, r13.zzzw
      udiv r18.x, r19.x, r5.w, cb0[3].z
      mov r19.y, r18.x
      ld_indexable(texture2d)(uint,uint,uint,uint) r20.z, r19.xyzz, t6.yzxw
      utof r13.zw, r13.zzzw
      min r14.zw, r2.yyyw, r13.zzzw
      add r14.zw, r14.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
      mad r14.zw, r14.zzzw, cb1[127].zzzw, -cb1[68].wwwz
      div r14.zw, r14.zzzw, cb1[68].xxxy
      mul r20.xy, r20.zzzz, r14.zwzz
      dp4 r22.x, r20.xyzw, r10.xyzw
      dp4 r22.y, r20.xyzw, r12.xyzw
      dp4 r22.z, r20.xyzw, r9.xyzw
      dp4 r5.w, r22.xyzw, r8.xyzw
      div r5.w, |r5.w|, r2.z
      mul r5.w, r5.w, r5.w
      mul r5.w, r5.w, l(-10000.000000)
      exp r5.w, r5.w
      add r13.zw, -r4.xxxy, r13.zzzw
      min r6.w, |r13.w|, |r13.z|
      div r6.w, r6.w, r0.w
      min r6.w, r6.w, l(1.000000)
      add r6.w, -r6.w, l(1.000000)
      mul r19.w, r5.w, r6.w
      lt r5.w, r23.z, r19.w
      movc r23.xyz, r5.wwww, r19.xywx, r23.xyzx
      iadd r4.z, r4.z, l(1)
    endloop 
    mov r21.xy, r23.xyxx
    mov r15.w, r23.z
  endif 
  dp4 r0.w, r15.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  max r0.w, r0.w, l(0.010000)
  div r2.xyzw, r15.xyzw, r0.wwww
  mad r4.xy, r1.yyyy, l(32.665001, 11.815000, 0.000000, 0.000000), r4.xyxx
  dp2 r0.w, r4.xyxx, l(0.067111, 0.005837, 0.000000, 0.000000)
  frc r0.w, r0.w
  mul r0.w, r0.w, l(52.982918)
  frc r0.w, r0.w
  dp4 r1.y, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  mul r0.w, r0.w, r1.y
  add r1.y, r2.y, r2.x
  add r2.y, r2.z, r1.y
  ge r2.y, r0.w, r2.y
  ge r1.y, r0.w, r1.y
  ge r0.w, r0.w, r2.x
  movc r2.xz, r0.wwww, r17.xxyx, r14.xxyx
  movc r2.xz, r1.yyyy, r16.xxyx, r2.xxzx
  movc r2.xy, r2.yyyy, r21.xyxx, r2.xzxx
  mad r4.xyz, cb1[60].xyzx, l(2097152.000000, 2097152.000000, 2097152.000000, 0.000000), cb1[69].xyzx
  add r4.xyz, -r11.xyzx, r4.xyzx
  dp3 r0.w, r4.xyzx, r4.xyzx
  rsq r0.w, r0.w
  mul r4.xyz, r0.wwww, r4.xyzx
  if_nz cb0[23].z
    ld_indexable(texture2d)(float,float,float,float) r6.xyw, r0.xyzz, t11.xywz
    mad r6.xyw, r6.xyxw, l(2.000000, 2.000000, 0.000000, 2.000000), l(-1.000000, -1.000000, 0.000000, -1.000000)
    dp3 r0.w, r6.xywx, r6.xywx
    sqrt r0.w, r0.w
    lt r1.y, l(0.000000), r0.w
    div r6.xyw, r6.xyxw, r0.wwww
    movc r6.xyw, r1.yyyy, r6.xyxw, r8.xyxz
  else 
    mov r6.xyw, r8.xyxz
    mov r0.w, l(1.000000)
  endif 
  switch r1.w
    case l(7)
    mov r1.y, l(-1)
    break 
    default 
    mov r1.y, l(0)
    break 
  endswitch 
  movc r1.y, r1.y, l(1), cb0[24].w
  if_z r1.y
    mov r2.w, l(0)
    ld_indexable(texture2d)(float,float,float,float) r9.xyz, r2.xyww, t12.xyzw
    ld_indexable(texture2d)(float,float,float,float) r10.xyzw, r2.xyww, t13.xyzw
    iadd r2.z, r2.x, cb0[3].z
    ld_indexable(texture2d)(float,float,float,float) r11.xyzw, r2.zyww, t13.xyzw
    ishl r12.xy, cb0[3].zzzz, l(1, 2, 0, 0)
    iadd r12.xy, r2.xxxx, r12.xyxx
    mov r12.zw, r2.yyyw
    ld_indexable(texture2d)(float,float,float,float) r13.xyzw, r12.xzww, t13.xyzw
    imad r14.xy, l(3, 5, 0, 0), cb0[3].zzzz, r2.xxxx
    mov r14.zw, r12.zzzw
    ld_indexable(texture2d)(float,float,float,float) r15.xyzw, r14.xzww, t13.xyzw
    ld_indexable(texture2d)(float,float,float,float) r12.xyzw, r12.yzww, t13.xyzw
    ld_indexable(texture2d)(float,float,float,float) r14.xyzw, r14.yzww, t13.xyzw
    mad r3.xyw, r3.zxzy, r5.zzzz, -r6.wxwy
    mad r3.xyw, r0.wwww, r3.xyxw, r6.wxwy
    dp3 r5.w, r3.xywx, r3.xywx
    rsq r5.w, r5.w
    mul r3.xyw, r3.xyxw, r5.wwww
    add r5.w, -r0.w, l(1.000000)
    mul r8.w, r5.w, r5.w
    mad r9.w, -r5.w, r5.w, l(1.000000)
    mul r16.x, r9.w, l(0.886227)
    mad r5.w, -r8.w, r5.w, l(1.000000)
    mul r5.w, r5.w, l(1.023327)
    mad r8.w, -r8.w, r8.w, l(1.000000)
    add r9.w, r9.w, r9.w
    mad r8.w, r8.w, l(3.000000), -r9.w
    mul r8.w, r8.w, l(0.247708)
    mov r17.x, r10.x
    mov r17.y, r13.x
    mov r17.z, r12.x
    mov r18.x, r10.y
    mov r18.y, r13.y
    mov r18.z, r12.y
    mul r16.yzw, r3.xxxx, r18.xxyz
    mad r16.yzw, -r17.xxyz, r3.wwww, r16.yyzw
    mov r12.x, r10.z
    mov r12.y, r13.z
    mad r10.xyz, -r12.xyzx, r3.yyyy, r16.yzwy
    mul r10.xyz, r5.wwww, r10.xyzx
    mad r9.xyz, r16.xxxx, r9.xyzx, r10.xyzx
    mul r10.xy, r3.xwxx, r3.xwxx
    mad r5.w, r10.x, l(3.000000), l(-1.000000)
    mov r13.x, r11.y
    mov r13.y, r15.y
    mov r13.z, r14.y
    mad r9.w, r3.y, r3.y, -r10.y
    mov r10.x, r11.w
    mov r10.y, r15.w
    mov r10.z, r14.w
    mov r12.x, r10.w
    mov r12.y, r13.w
    mul r12.xyz, r3.yyyy, r12.xywx
    mov r16.x, r11.x
    mov r16.y, r15.x
    mov r16.z, r14.x
    mul r11.xyw, r3.wwww, r16.xyxz
    mul r11.xyw, r3.xxxx, r11.xyxw
    mad r11.xyw, r12.xyxz, r3.wwww, -r11.xyxw
    mov r14.x, r11.z
    mov r14.y, r15.z
    mul r12.xyz, r3.xxxx, r14.xyzx
    mad r3.xyw, -r12.xyxz, r3.yyyy, r11.xyxw
    add r3.xyw, r3.xyxw, r3.xyxw
    mad r3.xyw, r10.xyxz, r9.wwww, r3.xyxw
    mul r3.xyw, r3.xyxw, l(1.732051, 1.732051, 0.000000, 1.732051)
    mad r3.xyw, r13.xyxz, r5.wwww, r3.xyxw
    mad r3.xyw, r8.wwww, r3.xyxw, r9.xyxz
    max r3.xyw, r3.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
    mul r3.xyw, r3.xyxw, l(12.566371, 12.566371, 0.000000, 12.566371)
  else 
    ieq r1.y, r1.y, l(1)
    if_nz r1.y
      add r1.y, -r0.w, l(1.000000)
      sqrt r1.y, r1.y
      mad r1.y, r1.y, l(1.250000), l(0.750000)
      div r1.y, r1.y, r0.w
      mov r0.z, cb1[139].x
      imad r9.xyz, r0.xyzx, l(0x0019660d, 0x0019660d, 0x0019660d, 0), l(0x3c6ef35f, 0x3c6ef35f, 0x3c6ef35f, 0)
      imad r5.w, r9.y, r9.z, r9.x
      imad r8.w, r9.z, r5.w, r9.y
      imad r9.x, r5.w, r8.w, r9.z
      imad r5.w, r8.w, r9.x, r5.w
      imad r8.w, r9.x, r5.w, r8.w
      ushr r5.w, r5.w, l(16)
      utof r5.w, r5.w
      mul r5.w, r5.w, l(0.000015)
      utof r9.xy, r2.xyxx
      ge r9.z, r8.z, l(0.000000)
      movc r9.zw, r9.zzzz, l(0,0,1.000000,-1.000000), l(0,0,-1.000000,1.000000)
      mad r10.x, r3.z, r5.z, r9.z
      rcp r10.x, r10.x
      mul r10.yzw, r8.yyxy, r8.xxxy
      mul r11.y, -r10.x, r10.y
      mul r10.y, r9.z, -r10.x
      mad r11.x, r10.y, r10.z, l(1.000000)
      mul r12.x, r9.z, r11.y
      mul r13.x, r8.x, r9.w
      mad r12.y, r10.w, -r10.x, r9.z
      lt r9.z, l(0.000000), r5.y
      mov_sat r10.y, r1.z
      dp3 r9.w, r8.xyzx, r4.xyzx
      max r10.w, r9.w, l(-1.000000)
      min r10.w, r10.w, l(1.000000)
      max r14.xy, r1.zzzz, l(0.180000, 0.003922, 0.000000, 0.000000)
      min r14.xy, r14.xyxx, l(0.600000, 1.000000, 0.000000, 0.000000)
      mul r11.z, r14.x, l(0.500000)
      mul r15.z, r11.z, r11.z
      add r11.z, r14.x, r14.x
      mul r15.w, r11.z, r11.z
      add r11.z, -|r10.w|, l(1.000000)
      sqrt r11.z, r11.z
      mad r14.zw, |r10.wwww|, l(0.000000, 0.000000, -0.018729, -0.156583), l(0.000000, 0.000000, 0.074261, 1.570796)
      mad r12.w, r14.z, |r10.w|, l(-0.212114)
      mad r12.w, r12.w, |r10.w|, l(1.570729)
      mul r13.w, r11.z, r12.w
      mad r13.w, r13.w, l(-2.000000), l(3.141593)
      lt r14.z, r10.w, -r10.w
      and r13.w, r13.w, r14.z
      mad r12.w, r12.w, r11.z, r13.w
      add r12.w, -r12.w, l(1.570796)
      or r13.w, cb1[240].z, l(32)
      and r14.z, cb1[240].z, l(8)
      ult r14.z, l(0), r14.z
      min r16.x, r5.x, l(1.000000)
      movc r16.x, r9.z, r16.x, l(1.000000)
      mul r16.y, r11.z, r14.w
      ge r16.z, r10.w, l(0.000000)
      mad r11.z, -r14.w, r11.z, l(3.141593)
      movc r11.z, r16.z, r16.y, r11.z
      add r11.z, -r11.z, l(1.570796)
      mad r16.yzw, -r10.wwww, r8.xxyz, r4.xxyz
      dp3 r14.w, r16.yzwy, r16.yzwy
      mul r15.xy, r14.xyxx, r14.xyxx
      mul r17.xyz, r15.yyyy, l(0.500000, 1.253314, 5.013257, 0.000000)
      add r14.x, r15.y, r15.y
      mad r14.y, -r10.w, r10.w, l(1.000000)
      sqrt r14.y, r14.y
      mul r17.w, r10.w, l(-0.069943)
      add r18.x, r7.w, r7.w
      add r18.y, r16.x, l(-1.000000)
      mul r14.x, r14.x, r14.x
      mul r17.x, r17.x, r17.x
      mad r19.xyz, -r8.xyzx, r9.wwww, r4.xyzx
      dp3 r9.w, r19.xyzx, r19.xyzx
      rsq r9.w, r9.w
      mul r19.xyz, r9.wwww, r19.xyzx
      mov r11.w, r8.x
      mov r12.z, r8.y
      mul r13.yz, r8.yyzy, l(0.000000, -1.000000, 1.000000, 0.000000)
      mov r10.z, l(1.000000)
      mov r20.xyz, l(0,0,0,0)
      mov r9.w, l(0)
      loop 
        uge r18.z, r9.w, l(8)
        breakc_nz r18.z
        utof r18.z, r9.w
        mad r18.z, r18.z, l(0.125000), r5.w
        frc r21.x, r18.z
        bfrev r18.z, r9.w
        xor r18.z, r8.w, r18.z
        ushr r18.z, r18.z, l(16)
        utof r21.y, r18.z
        switch r1.w
          case l(1)
          case l(10)
          case l(2)
          case l(5)
          case l(3)
          case l(4)
          case l(6)
          case l(9)
          mad r18.zw, r21.xxxy, l(0.000000, 0.000000, 2.000000, 0.000031), l(0.000000, 0.000000, -1.000000, -1.000000)
          min r19.w, |r18.w|, |r18.z|
          max r20.w, |r18.w|, |r18.z|
          add r21.z, r20.w, l(0.000000)
          div r19.w, r19.w, r21.z
          ge r21.z, |r18.w|, |r18.z|
          and r21.z, r21.z, l(0x40000000)
          add r19.w, r19.w, r21.z
          mul r19.w, r19.w, l(0.785398)
          sincos r24.x, r25.x, r19.w
          mov r25.y, r24.x
          bfi r18.zw, l(0, 0, 31, 31), l(0, 0, 0, 0), r25.xxxy, r18.zzzw
          mul r24.xy, r20.wwww, r18.zwzz
          dp2 r18.z, r24.xyxx, r24.xyxx
          add r18.z, -r18.z, l(1.000000)
          sqrt r24.z, r18.z
          dp3 r22.x, r24.xyzx, r11.xywx
          dp3 r22.y, r24.xyzx, r12.xyzx
          dp3 r22.z, r24.xyzx, r13.xyzx
          mov r23.xyz, l(1.000000,1.000000,1.000000,0)
          break 
          case l(7)
          mul r18.z, r21.x, l(6.283185)
          mad r22.z, -r21.y, l(0.000031), l(1.000000)
          mad r18.w, -r22.z, r22.z, l(1.000000)
          sqrt r18.w, r18.w
          sincos r21.x, r24.x, r18.z
          mul r22.x, r18.w, r24.x
          mul r22.y, r18.w, r21.x
          if_nz r9.z
            dp3 r18.z, r22.xyzx, r8.xyzx
            min r10.x, |r18.z|, l(1.000000)
            sample_l_indexable(texture3d)(float,float,float,float) r21.xy, r10.xyzx, t0.xyzw, s1, l(0.000000)
            max r10.x, r18.z, l(-1.000000)
            min r10.x, r10.x, l(1.000000)
            min r18.zw, r21.xxxy, l(0.000000, 0.000000, 0.990000, 0.990000)
            mul r21.xy, r18.zwzz, r18.zwzz
            mad r19.w, -r18.z, r18.z, l(1.000000)
            mul r21.zw, r18.wwww, r21.xxxy
            div r20.w, r21.z, r19.w
            mul r21.z, r21.x, r21.w
            mul r22.w, r19.w, r19.w
            mul r19.w, r19.w, r22.w
            div r21.z, r21.z, r19.w
            add r20.w, r20.w, r21.z
            mul r24.xy, r18.zwzz, l(3.000000, 3.000000, 0.000000, 0.000000)
            div r24.xy, r18.zwzz, r24.xyxx
            dp3 r18.z, r15.xzwx, r24.xxxx
            mul r21.z, r18.z, r18.z
            add r23.w, -|r10.x|, l(1.000000)
            sqrt r23.w, r23.w
            mad r24.z, |r10.x|, l(-0.018729), l(0.074261)
            mad r24.z, r24.z, |r10.x|, l(-0.212114)
            mad r24.z, r24.z, |r10.x|, l(1.570729)
            mul r24.w, r23.w, r24.z
            mad r24.w, r24.w, l(-2.000000), l(3.141593)
            lt r10.x, r10.x, -r10.x
            and r10.x, r10.x, r24.w
            mad r10.x, r24.z, r23.w, r10.x
            add r10.x, r12.w, -r10.x
            add r10.x, r10.x, l(1.570796)
            dp3 r23.w, l(-0.070000, 0.035000, 0.140000, 0.000000), r24.xxxx
            add r24.x, r21.y, r21.y
            div r24.x, r24.x, r22.w
            add r24.x, -r24.x, l(1.000000)
            mul r23.w, r23.w, r23.w
            mul r23.w, r24.x, r23.w
            add r22.w, r22.w, r22.w
            mul r21.y, r21.x, r21.y
            mad r21.y, r21.y, l(4.000000), r22.w
            mul r21.y, r21.y, r23.w
            div r19.w, r21.y, r19.w
            dp3 r21.y, r15.xzwx, r24.yyyy
            mad r21.x, r21.x, l(0.700000), l(1.000000)
            add r22.w, r21.z, r21.z
            mad r22.w, r21.y, r21.y, r22.w
            sqrt r22.w, r22.w
            mul r23.w, r21.w, r22.w
            mad r22.w, r18.w, r22.w, r23.w
            mul r21.x, r21.x, r22.w
            add r18.z, r18.z, r18.z
            mad r18.z, r21.y, l(3.000000), r18.z
            mad r18.z, r21.w, r18.z, r18.w
            div r18.z, r21.x, r18.z
            mad r18.z, r18.z, r18.z, r21.z
            mad r10.x, r10.x, l(0.500000), -r19.w
            mul r10.x, r10.x, r10.x
            mul r10.x, r10.x, l(-0.500000)
            div r10.x, r10.x, r18.z
            mul r10.x, r10.x, l(1.442695)
            exp r10.x, r10.x
            mul r10.x, r20.w, r10.x
            mul r10.x, r10.x, l(0.445634)
            and r21.xyz, r10.xxxx, r14.zzzz
            mov r10.x, r13.w
          else 
            mov r21.xyz, l(0,0,0,0)
            mov r10.x, l(39)
          endif 
          dp3 r18.z, r4.xyzx, r22.xyzx
          dp3 r18.w, r8.xyzx, r22.xyzx
          max r19.w, r18.w, l(-1.000000)
          min r19.w, r19.w, l(1.000000)
          mad r20.w, |r19.w|, l(-0.156583), l(1.570796)
          add r21.w, -|r19.w|, l(1.000000)
          sqrt r21.w, r21.w
          mul r22.w, r20.w, r21.w
          ge r23.w, r19.w, l(0.000000)
          mad r20.w, -r20.w, r21.w, l(3.141593)
          movc r20.w, r23.w, r22.w, r20.w
          add r20.w, -r20.w, l(1.570796)
          add r20.w, r11.z, -r20.w
          mul r20.w, |r20.w|, l(0.500000)
          sincos null, r20.w, r20.w
          mad r24.xyz, -r19.wwww, r8.xyzx, r22.xyzx
          dp3 r21.w, r24.xyzx, r16.yzwy
          dp3 r22.w, r24.xyzx, r24.xyzx
          mad r22.w, r22.w, r14.w, l(0.000100)
          rsq r22.w, r22.w
          mul r21.w, r21.w, r22.w
          mad r24.xy, r21.wwww, l(0.500000, 17.000000, 0.000000, 0.000000), l(0.500000, -16.780001, 0.000000, 0.000000)
          mov_sat r24.x, r24.x
          sqrt r22.w, r24.x
          and r24.xzw, r10.xxxx, l(1, 0, 2, 4)
          mul r10.x, r14.y, r22.w
          mad r10.x, r10.x, l(0.997551), r17.w
          mul r23.w, r15.y, r22.w
          mul r25.xy, r23.wwww, l(1.414214, 3.544908, 0.000000, 0.000000)
          add r19.w, r10.w, r19.w
          mad r10.x, -r10.x, l(-0.139886), r19.w
          mul r10.x, r10.x, r10.x
          mul r10.x, r10.x, l(-0.500000)
          mul r23.w, r25.x, r25.x
          div r10.x, r10.x, r23.w
          mul r10.x, r10.x, l(1.442695)
          exp r10.x, r10.x
          div r10.x, r10.x, r25.y
          mul r10.x, r22.w, r10.x
          mad_sat r23.w, r18.z, l(0.500000), l(0.500000)
          sqrt r23.w, r23.w
          add r23.w, -r23.w, l(1.000000)
          mul r25.x, r23.w, r23.w
          mul r25.x, r25.x, r25.x
          mul r23.w, r23.w, r25.x
          mad r23.w, r23.w, l(0.953479), l(0.046521)
          mul r10.x, r10.x, r23.w
          mul r10.x, r18.x, r10.x
          mul r10.x, r10.x, l(0.250000)
          mov_sat r18.z, -r18.z
          mad r18.z, r18.z, r18.y, l(1.000000)
          mul r10.x, r10.x, r18.z
          movc r25.xyz, r24.xxxx, r10.xxxx, l(0,0,0,0)
          if_nz r24.z
            div r10.x, l(1.190000), r20.w
            mad r10.x, r20.w, l(0.360000), r10.x
            add r18.z, r19.w, l(-0.035000)
            mul r18.z, r18.z, r18.z
            mul r18.z, r18.z, l(-0.500000)
            div r18.z, r18.z, r17.x
            mul r18.z, r18.z, l(1.442695)
            exp r18.z, r18.z
            div r18.z, r18.z, r17.y
            div r10.x, l(1.000000, 1.000000, 1.000000, 1.000000), r10.x
            mad r23.w, -r21.w, l(0.800000), l(0.600000)
            mad r10.x, r10.x, r23.w, l(1.000000)
            mul r10.x, r10.x, r22.w
            mad r10.x, -r10.x, r10.x, l(1.000000)
            max r10.x, r10.x, l(0.000000)
            sqrt r10.x, r10.x
            mad r10.x, -r20.w, r10.x, l(1.000000)
            mul r22.w, r10.x, r10.x
            mul r22.w, r22.w, r22.w
            mul r10.x, r10.x, r22.w
            mad r10.x, r10.x, l(0.953479), l(0.046521)
            add r10.x, -r10.x, l(1.000000)
            mul r10.x, r10.x, r10.x
            mad r21.w, r21.w, l(-3.650000), l(-3.980000)
            mul r21.w, r21.w, l(1.442695)
            exp r21.w, r21.w
            mul r18.z, r18.z, r21.w
            mul r10.x, r10.x, r18.z
            mad r25.xyz, r10.xxxx, r16.xxxx, r25.zzzz
          endif 
          add r10.x, r19.w, l(-0.140000)
          mul r10.x, r10.x, r10.x
          mul r10.x, r10.x, l(-0.500000)
          div r10.x, r10.x, r14.x
          mul r10.x, r10.x, l(1.442695)
          exp r10.x, r10.x
          div r10.x, r10.x, r17.z
          mad r18.z, -r20.w, l(0.500000), l(1.000000)
          mul r19.w, r18.z, r18.z
          mul r19.w, r19.w, r19.w
          mul r18.z, r18.z, r19.w
          mad r18.z, r18.z, l(0.953479), l(0.046521)
          add r19.w, -r18.z, l(1.000000)
          mul r19.w, r19.w, r19.w
          mul r18.z, r18.z, r19.w
          mul r19.w, r24.y, l(1.442695)
          exp r19.w, r19.w
          mul r10.x, r10.x, r19.w
          mad r24.xyz, r10.xxxx, r18.zzzz, r25.xyzx
          movc r24.xyz, r24.wwww, r24.xyzx, r25.xyzx
          add r21.xyz, r21.xyzx, r24.xyzx
          add r10.x, -|r18.w|, l(1.000000)
          dp3 r18.z, r19.xyzx, r22.xyzx
          add r18.z, r18.z, l(1.000000)
          mul_sat r18.z, r18.z, l(0.250000)
          add r10.x, r10.x, -r18.z
          mad r10.x, r10.x, l(0.330000), r18.z
          mul r10.x, r1.x, r10.x
          mad r21.xyz, r10.xxxx, l(0.318310, 0.318310, 0.318310, 0.000000), r21.xyzx
          min r21.xyz, -r21.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
          mul r23.xyz, r21.xyzx, l(-12.566371, -12.566371, -12.566371, 0.000000)
          break 
          default 
          mov r22.xyz, l(0,0,0,0)
          mov r23.xyz, l(0,0,0,0)
          break 
        endswitch 
        dp3 r10.x, l(1.000000, 1.000000, 1.000000, 0.000000), |r22.xyzx|
        div r18.zw, r22.xxxy, r10.xxxx
        ge r10.x, l(0.000000), r22.z
        add r21.xy, -|r18.wzww|, l(1.000000, 1.000000, 0.000000, 0.000000)
        ge r21.zw, r18.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
        movc r21.zw, r21.zzzw, l(0,0,1.000000,1.000000), l(0,0,-1.000000,-1.000000)
        mul r21.xy, r21.zwzz, r21.xyxx
        movc r18.zw, r10.xxxx, r21.xxxy, r18.zzzw
        mad r18.zw, r18.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
        mad r18.zw, r18.zzzw, cb0[5].zzzw, cb0[6].xxxy
        mad r18.zw, r9.xxxy, cb0[6].zzzw, r18.zzzw
        sample_l_indexable(texture2d)(float,float,float,float) r21.xyz, r18.zwzz, t14.xyzw, s0, cb0[4].z
        dp3 r10.x, r6.xywx, r22.xyzx
        add r10.x, r10.x, l(-1.000000)
        mul r10.x, r1.y, r10.x
        mul r10.x, r10.x, l(1.442695)
        exp r10.x, r10.x
        mul r10.x, r10.x, l(1.009848)
        dp3 r18.z, r8.xyzx, r22.xyzx
        add r18.z, r18.z, l(-1.000000)
        mul r18.z, r18.z, l(1.168583)
        exp r18.z, r18.z
        mul r18.z, r18.z, l(1.009848)
        div r10.x, r10.x, r18.z
        min r10.x, r10.x, l(1.000000)
        mul r21.xyz, r23.xyzx, r21.xyzx
        mad r20.xyz, r21.xyzx, r10.xxxx, r20.xyzx
        iadd r9.w, r9.w, l(1)
      endloop 
      mul r9.xyz, r20.xyzx, l(3.141593, 3.141593, 3.141593, 0.000000)
      mul r1.y, r0.w, l(8.000000)
      div r3.xyw, r9.xyxz, r1.yyyy
    else 
      mov r3.xyw, l(0,0,0,0)
    endif 
  endif 
  mad r9.xyz, r7.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
  mad r10.xyz, r7.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), l(0.641700, 0.641700, 0.641700, 0.000000)
  mad r11.xyz, r7.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), l(0.690300, 0.690300, 0.690300, 0.000000)
  mad r9.xyz, r4.wwww, r9.xyzx, r10.xyzx
  mad r9.xyz, r9.xyzx, r4.wwww, r11.xyzx
  mul r9.xyz, r4.wwww, r9.xyzx
  max r9.xyz, r4.wwww, r9.xyzx
  mul r3.xyw, r3.xyxw, r9.xyxz
  min r1.y, r0.w, l(0.999000)
  add r4.w, -r1.y, l(1.000000)
  sqrt r5.w, r4.w
  sqrt r5.w, r5.w
  add r5.w, r5.w, r5.w
  div r5.w, r4.w, r5.w
  add r5.w, r5.w, l(1.000000)
  mul r8.w, r1.y, r5.w
  mul r9.x, r1.y, l(27.576937)
  log r4.w, r4.w
  mul r4.w, r4.w, l(1.500000)
  exp r4.w, r4.w
  mul r4.w, r4.w, r9.x
  sqrt r9.x, r1.y
  sqrt r9.x, r9.x
  mul r9.x, r9.x, l(-4.813464)
  exp r9.x, r9.x
  mul r4.w, r4.w, r9.x
  mad r1.y, -r1.y, r5.w, l(1.000000)
  max r1.y, r1.y, l(0.000010)
  div r1.y, r4.w, r1.y
  add r1.y, -r1.y, l(1.000000)
  mad r9.xyz, -r7.xyzx, r1.yyyy, l(1.000000, 1.000000, 1.000000, 0.000000)
  max r9.xyz, r9.xyzx, l(0.000010, 0.000010, 0.000010, 0.000000)
  div r7.xyz, r7.xyzx, r9.xyzx
  mad r7.xyz, r7.xyzx, r4.wwww, r8.wwww
  mul r3.xyw, r3.xyxw, r7.xyxz
  mov r2.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.y, r2.xyzw, t10.yxzw
  max r9.w, r1.y, l(0.001000)
  mul r9.xyz, r3.xywx, l(0.318310, 0.318310, 0.318310, 0.000000)
  add r1.y, r1.z, l(-0.500000)
  mul_sat r1.y, r1.y, l(3.333333)
  max r1.z, r1.z, l(0.010000)
  add r2.z, -cb0[24].z, cb0[24].y
  lt r2.w, r1.y, l(1.000000)
  ge r2.z, r1.z, r2.z
  and r2.z, r2.z, r2.w
  or r2.z, r6.z, r2.z
  if_nz r2.z
    max r1.z, r1.z, cb0[24].y
    utof r2.z, cb0[2].y
    mul r2.z, r2.z, l(0.199471)
    log r2.z, r2.z
    max r2.z, r2.z, l(0.000000)
    min r2.z, r2.z, cb0[4].z
    add r2.w, -r0.w, l(1.000000)
    sqrt r2.w, r2.w
    mad r2.w, r2.w, l(1.250000), l(0.750000)
    div r0.w, r2.w, r0.w
    mov r0.z, cb1[139].x
    imad r7.xyz, r0.xyzx, l(0x0019660d, 0x0019660d, 0x0019660d, 0), l(0x3c6ef35f, 0x3c6ef35f, 0x3c6ef35f, 0)
    imad r0.z, r7.y, r7.z, r7.x
    imad r2.w, r7.z, r0.z, r7.y
    imad r4.w, r0.z, r2.w, r7.z
    imad r0.z, r2.w, r4.w, r0.z
    imad r2.w, r4.w, r0.z, r2.w
    ushr r0.z, r0.z, l(16)
    utof r0.z, r0.z
    mul r0.z, r0.z, l(0.000015)
    utof r2.xy, r2.xyxx
    ge r4.w, r8.z, l(0.000000)
    movc r7.xy, r4.wwww, l(1.000000,-1.000000,0,0), l(-1.000000,1.000000,0,0)
    mad r3.z, r3.z, r5.z, r7.x
    rcp r3.z, r3.z
    mul r10.xyz, r8.yxyy, r8.xxyx
    mul r11.x, -r3.z, r10.x
    mul r4.w, -r3.z, r7.x
    mad r12.y, r4.w, r10.y, l(1.000000)
    mul r12.z, r7.x, r11.x
    mul r12.x, r8.x, r7.y
    mad r11.y, r10.z, -r3.z, r7.x
    mov r11.w, -r8.y
    mul r3.z, r1.z, r1.z
    dp3 r7.x, r12.yzxy, r4.xyzx
    dp3 r7.y, r11.xywx, r4.xyzx
    dp3 r10.z, r8.xyzx, r4.xyzx
    mul r10.xy, r3.zzzz, r7.xyxx
    dp3 r4.w, r10.xyzx, r10.xyzx
    rsq r4.w, r4.w
    mul r7.xyz, r4.wwww, r10.xyzx
    dp2 r4.w, r7.xyxx, r7.xyxx
    lt r5.z, l(0.000000), r4.w
    rsq r4.w, r4.w
    mul r13.x, r4.w, -r7.y
    mul r13.y, r4.w, r7.x
    mov r13.z, l(0)
    movc r10.xyw, r5.zzzz, r13.xyxz, l(1.000000,0,0,0)
    mul r13.xyz, r7.zxyz, r10.ywxy
    mad r13.xyz, r7.yzxy, r10.wxyw, -r13.xyzx
    mad r4.w, r7.z, l(0.500000), l(0.500000)
    add r5.z, -r4.w, l(1.000000)
    lt r5.y, l(0.000000), r5.y
    min r14.y, r1.z, l(1.000000)
    max r5.w, r10.z, l(-1.000000)
    min r5.w, r5.w, l(1.000000)
    max r1.z, r1.z, l(0.180000)
    min r1.z, r1.z, l(0.600000)
    mul r15.x, r1.z, r1.z
    mul r6.z, r1.z, l(0.500000)
    mul r15.y, r6.z, r6.z
    add r1.z, r1.z, r1.z
    mul r15.z, r1.z, r1.z
    add r1.z, -|r5.w|, l(1.000000)
    sqrt r1.z, r1.z
    mad r16.xy, |r5.wwww|, l(-0.018729, -0.156583, 0.000000, 0.000000), l(0.074261, 1.570796, 0.000000, 0.000000)
    mad r6.z, r16.x, |r5.w|, l(-0.212114)
    mad r6.z, r6.z, |r5.w|, l(1.570729)
    mul r8.w, r1.z, r6.z
    mad r8.w, r8.w, l(-2.000000), l(3.141593)
    lt r11.w, r5.w, -r5.w
    and r8.w, r8.w, r11.w
    mad r6.z, r6.z, r1.z, r8.w
    add r6.z, -r6.z, l(1.570796)
    or r8.w, cb1[240].z, l(32)
    and r11.w, cb1[240].z, l(8)
    ult r11.w, l(0), r11.w
    min r5.x, r5.x, l(1.000000)
    movc r5.x, r5.y, r5.x, l(1.000000)
    mul r12.w, r1.z, r16.y
    ge r13.w, r5.w, l(0.000000)
    mad r1.z, -r16.y, r1.z, l(3.141593)
    movc r1.z, r13.w, r12.w, r1.z
    add r1.z, -r1.z, l(1.570796)
    mad r16.xyz, -r5.wwww, r8.xyzx, r4.xyzx
    dp3 r12.w, r16.xyzx, r16.xyzx
    mul r13.w, r14.y, r14.y
    mul r17.xyz, r13.wwww, l(0.500000, 1.253314, 5.013257, 0.000000)
    add r14.w, r13.w, r13.w
    mad r15.w, -r5.w, r5.w, l(1.000000)
    sqrt r15.w, r15.w
    mul r16.w, r5.w, l(-0.069943)
    add r7.w, r7.w, r7.w
    add r17.w, r5.x, l(-1.000000)
    mul r14.w, r14.w, r14.w
    mul r17.x, r17.x, r17.x
    mad r18.xyz, -r8.xyzx, r10.zzzz, r4.xyzx
    dp3 r10.z, r18.xyzx, r18.xyzx
    rsq r10.z, r10.z
    mul r18.xyz, r10.zzzz, r18.xyzx
    mov r19.x, r12.y
    mov r19.y, r11.x
    mov r19.z, r8.x
    mov r11.x, r12.z
    mov r11.z, r8.y
    mul r12.yz, r8.yyzy, l(0.000000, -1.000000, 1.000000, 0.000000)
    mov r14.z, l(1.000000)
    mov r20.xyz, l(0,0,0,0)
    mov r10.z, l(0)
    loop 
      uge r18.w, r10.z, l(4)
      breakc_nz r18.w
      utof r18.w, r10.z
      mad r18.w, r18.w, l(0.250000), r0.z
      frc r21.x, r18.w
      bfrev r18.w, r10.z
      xor r18.w, r2.w, r18.w
      ushr r18.w, r18.w, l(16)
      utof r18.w, r18.w
      mad r18.w, r18.w, l(0.000015), l(-0.500000)
      mad r21.y, r18.w, l(0.900000), l(0.500000)
      switch r1.w
        case l(1)
        case l(10)
        case l(2)
        case l(5)
        case l(3)
        case l(4)
        case l(6)
        case l(9)
        mad r21.zw, r21.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
        min r18.w, |r21.w|, |r21.z|
        max r19.w, |r21.w|, |r21.z|
        add r20.w, r19.w, l(0.000000)
        div r18.w, r18.w, r20.w
        ge r20.w, |r21.w|, |r21.z|
        and r20.w, r20.w, l(0x40000000)
        add r18.w, r18.w, r20.w
        mul r18.w, r18.w, l(0.785398)
        sincos r24.x, r25.x, r18.w
        mov r25.y, r24.x
        bfi r21.zw, l(0, 0, 31, 31), l(0, 0, 0, 0), r25.xxxy, r21.zzzw
        mul r24.xy, r19.wwww, r21.zwzz
        mad r18.w, -r24.x, r24.x, l(1.000000)
        sqrt r18.w, r18.w
        mul r19.w, r4.w, r24.y
        mad r24.z, r5.z, r18.w, r19.w
        mul r25.xyz, r13.xyzx, r24.zzzz
        mad r25.xyz, r24.xxxx, r10.xywx, r25.xyzx
        dp2 r18.w, r24.xzxx, r24.xzxx
        add r18.w, -r18.w, l(1.000000)
        max r18.w, r18.w, l(0.000000)
        sqrt r18.w, r18.w
        mad r24.xyz, r18.wwww, r7.xyzx, r25.xyzx
        mul r25.xy, r3.zzzz, r24.xyxx
        max r25.z, r24.z, l(0.000000)
        dp3 r18.w, r25.xyzx, r25.xyzx
        rsq r18.w, r18.w
        mul r24.xyz, r18.wwww, r25.xyzx
        dp3 r25.x, r24.xyzx, r19.xyzx
        dp3 r25.y, r24.xyzx, r11.xyzx
        dp3 r25.z, r24.xyzx, r12.xyzx
        dp3 r18.w, r4.xyzx, r25.xyzx
        add r18.w, r18.w, r18.w
        mad r22.xyz, r18.wwww, r25.xyzx, -r4.xyzx
        mov r23.xyz, l(1.000000,1.000000,1.000000,0)
        break 
        case l(7)
        mul r18.w, r21.x, l(6.283185)
        mad r22.z, -r21.y, l(2.000000), l(1.000000)
        mad r19.w, -r22.z, r22.z, l(1.000000)
        sqrt r19.w, r19.w
        sincos r21.x, r24.x, r18.w
        mul r22.x, r19.w, r24.x
        mul r22.y, r19.w, r21.x
        if_nz r5.y
          dp3 r18.w, r22.xyzx, r8.xyzx
          min r14.x, |r18.w|, l(1.000000)
          sample_l_indexable(texture3d)(float,float,float,float) r21.xy, r14.xyzx, t0.xyzw, s1, l(0.000000)
          max r14.x, r18.w, l(-1.000000)
          min r14.x, r14.x, l(1.000000)
          min r21.xy, r21.xyxx, l(0.990000, 0.990000, 0.000000, 0.000000)
          mul r21.zw, r21.xxxy, r21.xxxy
          mad r18.w, -r21.x, r21.x, l(1.000000)
          mul r24.xy, r21.zwzz, r21.yyyy
          div r19.w, r24.x, r18.w
          mul r20.w, r21.z, r24.y
          mul r22.w, r18.w, r18.w
          mul r18.w, r18.w, r22.w
          div r20.w, r20.w, r18.w
          add r19.w, r19.w, r20.w
          mul r24.xz, r21.xxyx, l(3.000000, 0.000000, 3.000000, 0.000000)
          div r24.xz, r21.xxyx, r24.xxzx
          dp3 r20.w, r15.xyzx, r24.xxxx
          mul r21.x, r20.w, r20.w
          add r23.w, -|r14.x|, l(1.000000)
          sqrt r23.w, r23.w
          mad r24.w, |r14.x|, l(-0.018729), l(0.074261)
          mad r24.w, r24.w, |r14.x|, l(-0.212114)
          mad r24.w, r24.w, |r14.x|, l(1.570729)
          mul r25.x, r23.w, r24.w
          mad r25.x, r25.x, l(-2.000000), l(3.141593)
          lt r14.x, r14.x, -r14.x
          and r14.x, r14.x, r25.x
          mad r14.x, r24.w, r23.w, r14.x
          add r14.x, r6.z, -r14.x
          add r14.x, r14.x, l(1.570796)
          dp3 r23.w, l(-0.070000, 0.035000, 0.140000, 0.000000), r24.xxxx
          add r24.x, r21.w, r21.w
          div r24.x, r24.x, r22.w
          add r24.x, -r24.x, l(1.000000)
          mul r23.w, r23.w, r23.w
          mul r23.w, r24.x, r23.w
          add r22.w, r22.w, r22.w
          mul r21.w, r21.z, r21.w
          mad r21.w, r21.w, l(4.000000), r22.w
          mul r21.w, r21.w, r23.w
          div r18.w, r21.w, r18.w
          dp3 r21.w, r15.xyzx, r24.zzzz
          mad r21.z, r21.z, l(0.700000), l(1.000000)
          add r22.w, r21.x, r21.x
          mad r22.w, r21.w, r21.w, r22.w
          sqrt r22.w, r22.w
          mul r23.w, r22.w, r24.y
          mad r22.w, r21.y, r22.w, r23.w
          mul r21.z, r21.z, r22.w
          add r20.w, r20.w, r20.w
          mad r20.w, r21.w, l(3.000000), r20.w
          mad r20.w, r24.y, r20.w, r21.y
          div r20.w, r21.z, r20.w
          mad r20.w, r20.w, r20.w, r21.x
          mad r14.x, r14.x, l(0.500000), -r18.w
          mul r14.x, r14.x, r14.x
          mul r14.x, r14.x, l(-0.500000)
          div r14.x, r14.x, r20.w
          mul r14.x, r14.x, l(1.442695)
          exp r14.x, r14.x
          mul r14.x, r19.w, r14.x
          mul r14.x, r14.x, l(0.445634)
          and r21.xyz, r11.wwww, r14.xxxx
          mov r14.x, r8.w
        else 
          mov r21.xyz, l(0,0,0,0)
          mov r14.x, l(39)
        endif 
        dp3 r18.w, r4.xyzx, r22.xyzx
        dp3 r19.w, r8.xyzx, r22.xyzx
        max r20.w, r19.w, l(-1.000000)
        min r20.w, r20.w, l(1.000000)
        mad r21.w, |r20.w|, l(-0.156583), l(1.570796)
        add r22.w, -|r20.w|, l(1.000000)
        sqrt r22.w, r22.w
        mul r23.w, r21.w, r22.w
        ge r24.x, r20.w, l(0.000000)
        mad r21.w, -r21.w, r22.w, l(3.141593)
        movc r21.w, r24.x, r23.w, r21.w
        add r21.w, -r21.w, l(1.570796)
        add r21.w, r1.z, -r21.w
        mul r21.w, |r21.w|, l(0.500000)
        sincos null, r21.w, r21.w
        mad r24.xyz, -r20.wwww, r8.xyzx, r22.xyzx
        dp3 r22.w, r24.xyzx, r16.xyzx
        dp3 r23.w, r24.xyzx, r24.xyzx
        mad r23.w, r23.w, r12.w, l(0.000100)
        rsq r23.w, r23.w
        mul r22.w, r22.w, r23.w
        mad r24.xy, r22.wwww, l(0.500000, 17.000000, 0.000000, 0.000000), l(0.500000, -16.780001, 0.000000, 0.000000)
        mov_sat r24.x, r24.x
        sqrt r23.w, r24.x
        and r24.xzw, r14.xxxx, l(1, 0, 2, 4)
        mul r14.x, r15.w, r23.w
        mad r14.x, r14.x, l(0.997551), r16.w
        mul r25.x, r13.w, r23.w
        mul r25.xy, r25.xxxx, l(1.414214, 3.544908, 0.000000, 0.000000)
        add r20.w, r5.w, r20.w
        mad r14.x, -r14.x, l(-0.139886), r20.w
        mul r14.x, r14.x, r14.x
        mul r14.x, r14.x, l(-0.500000)
        mul r25.x, r25.x, r25.x
        div r14.x, r14.x, r25.x
        mul r14.x, r14.x, l(1.442695)
        exp r14.x, r14.x
        div r14.x, r14.x, r25.y
        mul r14.x, r23.w, r14.x
        mad_sat r25.x, r18.w, l(0.500000), l(0.500000)
        sqrt r25.x, r25.x
        add r25.x, -r25.x, l(1.000000)
        mul r25.y, r25.x, r25.x
        mul r25.y, r25.y, r25.y
        mul r25.x, r25.x, r25.y
        mad r25.x, r25.x, l(0.953479), l(0.046521)
        mul r14.x, r14.x, r25.x
        mul r14.x, r7.w, r14.x
        mul r14.x, r14.x, l(0.250000)
        mov_sat r18.w, -r18.w
        mad r18.w, r18.w, r17.w, l(1.000000)
        mul r14.x, r14.x, r18.w
        movc r25.xyz, r24.xxxx, r14.xxxx, l(0,0,0,0)
        if_nz r24.z
          div r14.x, l(1.190000), r21.w
          mad r14.x, r21.w, l(0.360000), r14.x
          add r18.w, r20.w, l(-0.035000)
          mul r18.w, r18.w, r18.w
          mul r18.w, r18.w, l(-0.500000)
          div r18.w, r18.w, r17.x
          mul r18.w, r18.w, l(1.442695)
          exp r18.w, r18.w
          div r18.w, r18.w, r17.y
          div r14.x, l(1.000000, 1.000000, 1.000000, 1.000000), r14.x
          mad r24.x, -r22.w, l(0.800000), l(0.600000)
          mad r14.x, r14.x, r24.x, l(1.000000)
          mul r14.x, r14.x, r23.w
          mad r14.x, -r14.x, r14.x, l(1.000000)
          max r14.x, r14.x, l(0.000000)
          sqrt r14.x, r14.x
          mad r14.x, -r21.w, r14.x, l(1.000000)
          mul r23.w, r14.x, r14.x
          mul r23.w, r23.w, r23.w
          mul r14.x, r14.x, r23.w
          mad r14.x, r14.x, l(0.953479), l(0.046521)
          add r14.x, -r14.x, l(1.000000)
          mul r14.x, r14.x, r14.x
          mad r22.w, r22.w, l(-3.650000), l(-3.980000)
          mul r22.w, r22.w, l(1.442695)
          exp r22.w, r22.w
          mul r18.w, r18.w, r22.w
          mul r14.x, r14.x, r18.w
          mad r25.xyz, r14.xxxx, r5.xxxx, r25.zzzz
        endif 
        add r14.x, r20.w, l(-0.140000)
        mul r14.x, r14.x, r14.x
        mul r14.x, r14.x, l(-0.500000)
        div r14.x, r14.x, r14.w
        mul r14.x, r14.x, l(1.442695)
        exp r14.x, r14.x
        div r14.x, r14.x, r17.z
        mad r18.w, -r21.w, l(0.500000), l(1.000000)
        mul r20.w, r18.w, r18.w
        mul r20.w, r20.w, r20.w
        mul r18.w, r18.w, r20.w
        mad r18.w, r18.w, l(0.953479), l(0.046521)
        add r20.w, -r18.w, l(1.000000)
        mul r20.w, r20.w, r20.w
        mul r18.w, r18.w, r20.w
        mul r20.w, r24.y, l(1.442695)
        exp r20.w, r20.w
        mul r14.x, r14.x, r20.w
        mad r24.xyz, r14.xxxx, r18.wwww, r25.xyzx
        movc r24.xyz, r24.wwww, r24.xyzx, r25.xyzx
        add r21.xyz, r21.xyzx, r24.xyzx
        add r14.x, -|r19.w|, l(1.000000)
        dp3 r18.w, r18.xyzx, r22.xyzx
        add r18.w, r18.w, l(1.000000)
        mul_sat r18.w, r18.w, l(0.250000)
        add r14.x, r14.x, -r18.w
        mad r14.x, r14.x, l(0.330000), r18.w
        mul r14.x, r1.x, r14.x
        mad r21.xyz, r14.xxxx, l(0.318310, 0.318310, 0.318310, 0.000000), r21.xyzx
        min r21.xyz, -r21.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
        mul r23.xyz, r21.xyzx, l(-12.566371, -12.566371, -12.566371, 0.000000)
        break 
        default 
        mov r22.xyz, l(0,0,0,0)
        mov r23.xyz, l(0,0,0,0)
        break 
      endswitch 
      dp3 r14.x, l(1.000000, 1.000000, 1.000000, 0.000000), |r22.xyzx|
      div r21.xy, r22.xyxx, r14.xxxx
      ge r14.x, l(0.000000), r22.z
      add r21.zw, -|r21.yyyx|, l(0.000000, 0.000000, 1.000000, 1.000000)
      ge r24.xy, r21.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
      movc r24.xy, r24.xyxx, l(1.000000,1.000000,0,0), l(-1.000000,-1.000000,0,0)
      mul r21.zw, r21.zzzw, r24.xxxy
      movc r21.xy, r14.xxxx, r21.zwzz, r21.xyxx
      mad r21.xy, r21.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      mad r21.xy, r21.xyxx, cb0[5].zwzz, cb0[6].xyxx
      mad r21.xy, r2.xyxx, cb0[6].zwzz, r21.xyxx
      sample_l_indexable(texture2d)(float,float,float,float) r21.xyz, r21.xyxx, t14.xyzw, s0, r2.z
      dp3 r14.x, r6.xywx, r22.xyzx
      add r14.x, r14.x, l(-1.000000)
      mul r14.x, r0.w, r14.x
      mul r14.x, r14.x, l(1.442695)
      exp r14.x, r14.x
      mul r14.x, r14.x, l(1.009848)
      dp3 r18.w, r8.xyzx, r22.xyzx
      add r18.w, r18.w, l(-1.000000)
      mul r18.w, r18.w, l(1.168583)
      exp r18.w, r18.w
      mul r18.w, r18.w, l(1.009848)
      div r14.x, r14.x, r18.w
      min r14.x, r14.x, l(1.000000)
      mul r21.xyz, r23.xyzx, r21.xyzx
      mul r21.xyz, r14.xxxx, r21.xyzx
      dp3 r14.x, r21.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
      add r14.x, r14.x, l(1.000000)
      div r21.xyz, r21.xyzx, r14.xxxx
      add r20.xyz, r20.xyzx, r21.xyzx
      iadd r10.z, r10.z, l(1)
    endloop 
    mul r1.xzw, r20.xxyz, l(0.250000, 0.000000, 0.250000, 0.250000)
    dp3 r0.z, r1.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
    add r0.z, -r0.z, l(1.000000)
    div r1.xzw, r1.xxzw, r0.zzzz
  else 
    mov r1.xzw, l(0,0,0,0)
  endif 
  mad r2.xyz, r3.xywx, l(0.318310, 0.318310, 0.318310, 0.000000), -r1.xzwx
  mad r1.xyz, r1.yyyy, r2.xyzx, r1.xzwx
else 
  mov r9.xyzw, l(0,0,0,0)
  mov r1.xyz, l(0,0,0,0)
endif 
store_uav_typed u1.xyzw, r0.xyyy, r1.xyzz
store_uav_typed u0.xyzw, r0.xyyy, r9.xyzw
ret 
// Approximately 1410 instruction slots used
